<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <repository-location id='PatientAffordability' path='/workbooks' revision='1.0' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' default-format='p0.00%' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='YES' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='No' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource inline='true' name='Income' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ET5748' server='128.83.138.158' service='orcl' username='C##cs347_et5748'>
        <relation name='MC_INCOME' table='[C##CS347_ET5748].[MC_INCOME]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDIAN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEDIAN]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>MEDIAN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEAN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEAN]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>MEAN</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[POP]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>POP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mean' datatype='real' name='[MEAN]' role='measure' type='quantitative'>
      </column>
      <column caption='Median' datatype='real' name='[MEDIAN]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/Income.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:29:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='32627' timestamp-start='2014-10-07 22:29:07.231' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>MEAN</remote-name>
              <remote-type>4</remote-type>
              <local-name>[MEAN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MEAN</remote-alias>
              <ordinal>0</ordinal>
              <family>MC_INCOME</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23566</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>54.0</statistic>
                <statistic aggregation='Max' datatype='real'>361842.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MEDIAN</remote-name>
              <remote-type>4</remote-type>
              <local-name>[MEDIAN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MEDIAN</remote-alias>
              <ordinal>1</ordinal>
              <family>MC_INCOME</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23071</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>33.0</statistic>
                <statistic aggregation='Max' datatype='real'>223106.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>POP</remote-name>
              <remote-type>4</remote-type>
              <local-name>[POP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>POP</remote-alias>
              <ordinal>3</ordinal>
              <family>MC_INCOME</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15172</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>113916.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ZIP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP</remote-alias>
              <ordinal>4</ordinal>
              <family>MC_INCOME</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32627</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1001.0</statistic>
                <statistic aggregation='Max' datatype='real'>99929.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='100000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='MDs' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_AML569' server='128.83.138.158' service='orcl' username='C##cs347_aml569'>
        <relation name='Custom SQL Query' type='text'>SELECT Gender, MedicalSchool, GRADUATIONYEAR, PRIMARYSPECIALTY, ORGANIZATIONLEGALNAME, GROUPPRACTICEPACID, NumberofGroupPracticeMembers, City, State, ZipCode, HospitalAffiliationCCN1, HOSPITALAFFILIATIONLBN1, PARTICIPATINGINEHR, PARTICIPATINGINERX, PARTICIPATINGINPQRS FROM physicians where credential = &apos;MD&apos;</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>GENDER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GENDER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>GENDER</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDICALSCHOOL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MEDICALSCHOOL]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>MEDICALSCHOOL</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>120</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRADUATIONYEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRADUATIONYEAR]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>GRADUATIONYEAR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRIMARYSPECIALTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRIMARYSPECIALTY]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PRIMARYSPECIALTY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>120</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORGANIZATIONLEGALNAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORGANIZATIONLEGALNAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ORGANIZATIONLEGALNAME</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUPPRACTICEPACID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[GROUPPRACTICEPACID]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>GROUPPRACTICEPACID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBEROFGROUPPRACTICEMEMBERS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NUMBEROFGROUPPRACTICEMEMBERS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>NUMBEROFGROUPPRACTICEMEMBERS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIPCODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIPCODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ZIPCODE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>9</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITALAFFILIATIONCCN1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSPITALAFFILIATIONCCN1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HOSPITALAFFILIATIONCCN1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITALAFFILIATIONLBN1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HOSPITALAFFILIATIONLBN1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HOSPITALAFFILIATIONLBN1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>120</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PARTICIPATINGINEHR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PARTICIPATINGINEHR]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PARTICIPATINGINEHR</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PARTICIPATINGINERX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PARTICIPATINGINERX]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PARTICIPATINGINERX</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PARTICIPATINGINPQRS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PARTICIPATINGINPQRS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PARTICIPATINGINPQRS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Number of Records]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/MDs.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:53:53 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records (bin)]' formula='SYS_NUMBIN([Number of Records],1)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='599790' timestamp-start='2014-10-07 22:53:53.562' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CITY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CITY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CITY</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6859</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GENDER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GENDER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GENDER</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;U&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRADUATIONYEAR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRADUATIONYEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRADUATIONYEAR</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>74</approx-count>
              <scale>1</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1796&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUPPRACTICEPACID</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUPPRACTICEPACID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUPPRACTICEPACID</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69877</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42100067.0</statistic>
                <statistic aggregation='Max' datatype='real'>9931398120.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HOSPITALAFFILIATIONCCN1</remote-name>
              <remote-type>4</remote-type>
              <local-name>[HOSPITALAFFILIATIONCCN1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HOSPITALAFFILIATIONCCN1</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4701</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>10001.0</statistic>
                <statistic aggregation='Max' datatype='real'>800037.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HOSPITALAFFILIATIONLBN1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[HOSPITALAFFILIATIONLBN1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HOSPITALAFFILIATIONLBN1</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4125</approx-count>
              <scale>1</scale>
              <width>120</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE COUNTY MEMORIAL HOSPITAL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUNI INDIAN HOSPITAL&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>480</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MEDICALSCHOOL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[MEDICALSCHOOL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MEDICALSCHOOL</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>326</approx-count>
              <scale>1</scale>
              <width>120</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A T STILL UN, ARIZONA SCHL OF DENT.Y &amp; ORAL HLTH&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YALE UNIVERSITY SCHOOL OF MEDICINE&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>480</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBEROFGROUPPRACTICEMEMBERS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[NUMBEROFGROUPPRACTICEMEMBERS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBEROFGROUPPRACTICEMEMBERS</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>482</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>5465.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records (bin)</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORGANIZATIONLEGALNAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ORGANIZATIONLEGALNAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORGANIZATIONLEGALNAME</remote-alias>
              <ordinal>10</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>69337</approx-count>
              <scale>1</scale>
              <width>200</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(RIVERSIDE FAMILY MEDICINE)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZYCARE MEDICAL ASSOCIATE, PLLC&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>800</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PARTICIPATINGINEHR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PARTICIPATINGINEHR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PARTICIPATINGINEHR</remote-alias>
              <ordinal>11</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;N&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Y&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PARTICIPATINGINERX</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PARTICIPATINGINERX]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PARTICIPATINGINERX</remote-alias>
              <ordinal>12</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;N&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Y&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PARTICIPATINGINPQRS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PARTICIPATINGINPQRS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PARTICIPATINGINPQRS</remote-alias>
              <ordinal>13</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;N&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Y&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PRIMARYSPECIALTY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PRIMARYSPECIALTY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PRIMARYSPECIALTY</remote-alias>
              <ordinal>14</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>66</approx-count>
              <scale>1</scale>
              <width>120</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ADDICTION MEDICINE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VASCULAR SURGERY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>480</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>15</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>56</approx-count>
              <scale>1</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIPCODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZIPCODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIPCODE</remote-alias>
              <ordinal>16</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>74099</approx-count>
              <scale>1</scale>
              <width>9</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00601&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99929&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>36</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='1000000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Outpatient' inline='true' name='Medicare' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ZI322' server='128.83.138.158' service='orcl' username='c##cs347_zi322'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[MC_PROVIDERS].[ID]'>
              </expression>
              <expression op='[MC_OUTPATIENT].[PROVIDERID]'>
              </expression>
            </expression>
          </clause>
          <relation name='MC_PROVIDERS' table='[C##CS347_ZI322].[MC_PROVIDERS]' type='table' />
          <relation name='MC_OUTPATIENT' table='[C##CS347_ZI322].[MC_OUTPATIENT]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STREETADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STREETADDRESS]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>STREETADDRESS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIPCODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIPCODE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ZIPCODE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITALREFERRALREGION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[HOSPITALREFERRALREGION]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>HOSPITALREFERRALREGION</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PHONENUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PHONENUMBER]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>PHONENUMBER</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROCEDURE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROCEDURE]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>PROCEDURE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>120</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDERID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDERID]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>PROVIDERID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTPATIENTSERVICES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTPATIENTSERVICES]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>OUTPATIENTSERVICES</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGESUBMITTEDCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGESUBMITTEDCHARGES]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>AVERAGESUBMITTEDCHARGES</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGETOTALPAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGETOTALPAYMENTS]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>AVERAGETOTALPAYMENTS</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Averagesubmittedcharges' datatype='real' name='[AVERAGESUBMITTEDCHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Averagetotalpayments' datatype='real' name='[AVERAGETOTALPAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Hospitalreferralregion' datatype='string' name='[HOSPITALREFERRALREGION]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[ID]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outpatientservices' datatype='real' name='[OUTPATIENTSERVICES]' role='measure' type='quantitative'>
      </column>
      <column caption='Phonenumber' datatype='string' name='[PHONENUMBER]' role='dimension' type='nominal'>
      </column>
      <column caption='Procedure' datatype='string' name='[PROCEDURE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Providerid' datatype='real' name='[PROVIDERID]' role='dimension' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column caption='Streetaddress' datatype='string' name='[STREETADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Zipcode' datatype='real' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/Outpatient.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:56:16 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='43783' timestamp-start='2014-10-07 22:56:16.032' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AVERAGESUBMITTEDCHARGES</remote-name>
              <remote-type>4</remote-type>
              <local-name>[AVERAGESUBMITTEDCHARGES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AVERAGESUBMITTEDCHARGES</remote-alias>
              <ordinal>0</ordinal>
              <family>MC_OUTPATIENT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6662</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.0</statistic>
                <statistic aggregation='Max' datatype='real'>44593.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AVERAGETOTALPAYMENTS</remote-name>
              <remote-type>4</remote-type>
              <local-name>[AVERAGETOTALPAYMENTS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AVERAGETOTALPAYMENTS</remote-alias>
              <ordinal>1</ordinal>
              <family>MC_OUTPATIENT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1258</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.0</statistic>
                <statistic aggregation='Max' datatype='real'>2121.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CITY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CITY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CITY</remote-alias>
              <ordinal>2</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1894</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZION&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY</remote-alias>
              <ordinal>3</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1051</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ACADIA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUMA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HOSPITALREFERRALREGION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[HOSPITALREFERRALREGION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HOSPITALREFERRALREGION</remote-alias>
              <ordinal>4</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>304</approx-count>
              <scale>1</scale>
              <width>200</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK - Anchorage&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY - Casper&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>800</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>5</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>10001.0</statistic>
                <statistic aggregation='Max' datatype='real'>670077.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>6</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2879</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>19.526845000000002</statistic>
                <statistic aggregation='Max' datatype='real'>64.835070000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>7</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2876</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-159.37746000000001</statistic>
                <statistic aggregation='Max' datatype='real'>-68.002160000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NAME</remote-alias>
              <ordinal>8</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3013</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(CLOSED) RIVERVIEW REGIONAL MEDICAL CENTER NORTH&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUMA REGIONAL MEDICAL CENTER&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OUTPATIENTSERVICES</remote-name>
              <remote-type>4</remote-type>
              <local-name>[OUTPATIENTSERVICES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OUTPATIENTSERVICES</remote-alias>
              <ordinal>10</ordinal>
              <family>MC_OUTPATIENT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3639</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11.0</statistic>
                <statistic aggregation='Max' datatype='real'>240070.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PHONENUMBER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PHONENUMBER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PHONENUMBER</remote-alias>
              <ordinal>11</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3071</approx-count>
              <scale>1</scale>
              <width>10</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0936933841&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9898943000&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>40</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PROCEDURE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PROCEDURE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PROCEDURE</remote-alias>
              <ordinal>12</ordinal>
              <family>MC_OUTPATIENT</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>120</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0012 - Level I Debridement &amp; Destruction&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0698 - Level II Eye Tests &amp; Treatments&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>480</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PROVIDERID</remote-name>
              <remote-type>4</remote-type>
              <local-name>[PROVIDERID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PROVIDERID</remote-alias>
              <ordinal>13</ordinal>
              <family>MC_OUTPATIENT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>10001.0</statistic>
                <statistic aggregation='Max' datatype='real'>670077.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>14</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STREETADDRESS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STREETADDRESS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STREETADDRESS</remote-alias>
              <ordinal>15</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3127</approx-count>
              <scale>1</scale>
              <width>200</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#1 MEDICAL PARK DRIVE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITEHORSE PIKE AND TOWNSEND AVENUE&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>800</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIPCODE</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ZIPCODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIPCODE</remote-alias>
              <ordinal>16</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2896</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1040.0</statistic>
                <statistic aggregation='Max' datatype='real'>99801.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ZIP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP</remote-alias>
              <ordinal>17</ordinal>
              <family>MC_PROVIDERS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2892</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1040.0</statistic>
                <statistic aggregation='Max' datatype='real'>99801.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='100000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Pop By State' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_HNP248' server='128.83.138.158' service='orcl' username='C##cs347_hnp248'>
        <relation name='Custom SQL Query' type='text'>SELECT Sum(Popestimate2012), State.State_Name FROM Population&#10;INNER JOIN State&#10;on Population.State_ID = State.State_ID&#10;GROUP BY State.State_Name</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SUM(POPESTIMATE2012)</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SUM(POPESTIMATE2012)]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SUM(POPESTIMATE2012)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>STATE_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='#Drs/Pop' datatype='real' name='[Calculation_3391003142633875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.41915.546833981500].[Number of Records])/Sum([SUM(POPESTIMATE2012)])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/Pop By State.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:56:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2014-10-07 22:56:59.504' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_NAME</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>20</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>80</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(POPESTIMATE2012)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SUM(POPESTIMATE2012)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(POPESTIMATE2012)</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2351448.0</statistic>
                <statistic aggregation='Max' datatype='real'>158006360.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='1000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='State, MedCost' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_AML569' server='128.83.138.158' service='orcl' username='C##cs347_aml569'>
        <relation name='Custom SQL Query' type='text'>SELECT State, CTYCODE1, AGE, INCOME2, HLTHPLN1, CHECKUP1, MEDCOST FROM Patients</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTYCODE1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CTYCODE1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CTYCODE1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INCOME2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[INCOME2]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>INCOME2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HLTHPLN1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HLTHPLN1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HLTHPLN1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHECKUP1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CHECKUP1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CHECKUP1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDCOST</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEDCOST]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>MEDCOST</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
      </column>
      <column caption='MedCost' datatype='integer' name='[Calculation_1001005204916146]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[MEDCOST]' scope-isolation='false' />
      </column>
      <column caption='NumberYes' datatype='real' name='[Calculation_1131005194600905]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN [Parameters].[Parameter 2] END' scope-isolation='false' />
      </column>
      <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
      </column>
      <column caption='PercentNo' datatype='real' name='[Calculation_5591005215009390]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_8641005214823886])/SUM([Number of Records])' scope-isolation='false' />
      </column>
      <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
      </column>
      <column caption='NumberNo' datatype='real' name='[Calculation_8641005214823886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [MEDCOST] = 2 THEN [Parameters].[Parameter 3] END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Insurance' />
          <alias key='2' value='No Insurance' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less Than $10,000' />
          <alias key='2.0' value='$10,000 - $15,000' />
          <alias key='3.0' value='$15,000-$20,000' />
          <alias key='4.0' value='$20,000 - 25,000' />
          <alias key='5.0' value='$25,00 - $35,000' />
          <alias key='6.0' value='$35,000 - $50,000 ' />
          <alias key='7.0' value='$50,000 - $75,000' />
          <alias key='8.0' value='75,000+' />
          <alias key='77.0' value='Don&apos;t Know/Not Sure' />
          <alias key='99.0' value='Refused' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[MEDCOST]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
      <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[MEDCOST]' member='%null%' />
          <groupfilter from='1' function='range' level='[MEDCOST]' to='9' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/State, MedCost.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:57:35 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0461005211310581]' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' />
            <calculation column='[Calculation_1001005204916146]' formula='[MEDCOST]' />
            <calculation column='[Calculation_6831005181145998]' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='406630' timestamp-start='2014-10-07 22:57:35.321' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AGE</remote-name>
              <remote-type>4</remote-type>
              <local-name>[AGE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AGE</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>84</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.0</statistic>
                <statistic aggregation='Max' datatype='real'>99.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CHECKUP1</remote-name>
              <remote-type>4</remote-type>
              <local-name>[CHECKUP1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CHECKUP1</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>9.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CTYCODE1</remote-name>
              <remote-type>4</remote-type>
              <local-name>[CTYCODE1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CTYCODE1</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>999.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_0461005211310581</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_0461005211310581]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_0461005211310581</remote-alias>
              <ordinal>3</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;25 - 35&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;65+ (Medicare)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1001005204916146</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1001005204916146]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1001005204916146</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_6831005181145998</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6831005181145998]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6831005181145998</remote-alias>
              <ordinal>5</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Don&apos;t Know&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yes&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HLTHPLN1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[HLTHPLN1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HLTHPLN1</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>INCOME2</remote-name>
              <remote-type>4</remote-type>
              <local-name>[INCOME2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>INCOME2</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>99.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MEDCOST</remote-name>
              <remote-type>16</remote-type>
              <local-name>[MEDCOST]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MEDCOST</remote-alias>
              <ordinal>8</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>16</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>10</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>72</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='500000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:INCOME2:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>7.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>8.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>99.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>3.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>6.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>1.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>4.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>77.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:HLTHPLN1:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>1</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>9</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>7</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>%many-values%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6831005181145998:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='YES' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='No' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='StateName' inline='true' name='textscan.41917.768215752300' version='8.3'>
      <connection class='textscan' directory='/Users/alyshialedlie/Documents' filename='StateName.csv'>
        <relation name='StateName#csv' table='[StateName#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='State' ordinal='0' />
            <column datatype='string' name='StateName' ordinal='1' />
          </columns>
        </relation>
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateName]</local-name>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias>StateName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/alyshialedlie/Documents/StateName.tde' schema='Extract' tablename='Extract' update-time='10/07/2014 10:58:15 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='55' timestamp-start='2014-10-07 22:58:15.688' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StateName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[StateName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StateName</remote-alias>
              <ordinal>1</ordinal>
              <family>StateName#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>16</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>2</ordinal>
              <family>StateName#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>78</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='Medicare'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='Pop By State'>
      <column datatype='string' name='[STATE_NAME]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATE_NAME]' derivation='None' name='[none:STATE_NAME:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='State, MedCost'>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.41917.768215752300'>
      <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[State]' derivation='None' name='[none:State:ok]' pivot='key' type='ordinal' />
      <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='State, MedCost' target='Medicare'>
      <column-mapping>
        <map key='[State, MedCost].[none:STATE:ok]' value='[Medicare].[none:STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='Medicare' target='textscan.41917.768215752300'>
      <column-mapping>
        <map key='[Medicare].[none:STATE:nk]' value='[textscan.41917.768215752300].[none:StateName:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='State, MedCost' target='Pop By State'>
      <column-mapping>
        <map key='[State, MedCost].[none:STATE:ok]' value='[Pop By State].[none:STATE_NAME:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='State, MedCost' target='textscan.41917.768215752300'>
      <column-mapping>
        <map key='[State, MedCost].[none:STATE:ok]' value='[textscan.41917.768215752300].[none:State:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='By Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_0461005211310581]' derivation='None' name='[none:Calculation_0461005211310581:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_0461005211310581:nk]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='By Insured'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[State, MedCost].[none:HLTHPLN1:ok]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:HLTHPLN1:ok]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ByAge'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_0461005211310581]' derivation='None' name='[none:Calculation_0461005211310581:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[State, MedCost].[none:Calculation_0461005211310581:nk]' direction='DESC' using='[State, MedCost].[sum:Number of Records:qk]'>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;No&quot;' />
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Yes&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_6831005181145998:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_0461005211310581:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Can See MD (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
              <tooltip column='[State, MedCost].[pcto:sum:Number of Records:qk:3]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[none:Calculation_6831005181145998:nk]</rows>
        <cols>[State, MedCost].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Can See MD (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
            <datasource caption='StateName' name='textscan.41917.768215752300' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
        <join-lod-include-overrides>
          <column>[textscan.41917.768215752300].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Can See MD (6)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less Than $10,000' />
                <alias key='2.0' value='$10,000 - $15,000' />
                <alias key='3.0' value='$15,000-$20,000' />
                <alias key='4.0' value='$20,000 - 25,000' />
                <alias key='5.0' value='$25,00 - $35,000' />
                <alias key='6.0' value='$35,000 - $50,000 ' />
                <alias key='7.0' value='$50,000 - $75,000' />
                <alias key='8.0' value='75,000+' />
                <alias key='77.0' value='Don&apos;t Know/Not Sure' />
                <alias key='99.0' value='Refused' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[State, MedCost].[none:INCOME2:ok]'>
            <groupfilter from='1.0' function='range' level='[none:INCOME2:ok]' to='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[State, MedCost].[none:INCOME2:ok]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:INCOME2:ok]' />
              <size column='[State, MedCost].[none:HLTHPLN1:ok]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4282872676849365' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[none:Calculation_6831005181145998:nk]</rows>
        <cols>[State, MedCost].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='Parameters' />
            <datasource caption='Outpatient' name='Medicare' />
          </datasources>
          <datasource-dependencies datasource='Medicare'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
            </column>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1781005191151364]' derivation='User' name='[usr:Calculation_1781005191151364:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC' using='[State, MedCost].[usr:Calculation_1781005191151364:qk]'>
          </sort>
          <filter class='categorical' column='[textscan.41917.768215752300].[none:StateName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:StateName:nk]' />
              <groupfilter function='member' level='[none:StateName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
            <column>[textscan.41917.768215752300].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
        <join-lod-include-overrides>
          <column>[Medicare].[STATE]</column>
          <column>[textscan.41917.768215752300].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Crosstabs (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='Pop By State' />
          </datasources>
          <datasource-dependencies datasource='Pop By State'>
            <column datatype='string' name='[STATE_NAME]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[State, MedCost].[none:Calculation_6831005181145998:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.41917.768215752300].[none:StateName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:StateName:nk]' />
              <groupfilter function='member' level='[none:StateName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
            <column>[textscan.41917.768215752300].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value='107' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[State, MedCost].[pcto:sum:Number of Records:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[pcto:sum:Number of Records:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
        <join-lod-include-overrides>
          <column>[Pop By State].[STATE_NAME]</column>
          <column>[textscan.41917.768215752300].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Geographic Care'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='Parameters' />
            <datasource name='State, MedCost' />
            <datasource caption='Outpatient' name='Medicare' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Medicare'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
            </column>
            <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0461005211310581]' derivation='None' name='[none:Calculation_0461005211310581:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1781005191151364]' derivation='User' name='[usr:Calculation_1781005191151364:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_0461005211310581:nk]'>
            <groupfilter from='&quot;25 - 35&quot;' function='range' level='[none:Calculation_0461005211310581:nk]' to='&quot;65+ (Medicare)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Latitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Longitude (generated)]' included-values='non-null'>
          </filter>
          <slices>
            <column>[textscan.41917.768215752300].[Latitude (generated)]</column>
            <column>[textscan.41917.768215752300].[Longitude (generated)]</column>
            <column>[State, MedCost].[none:Calculation_0461005211310581:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41917.768215752300].[Longitude (generated)]' field-type='quantitative' max='32908877.759356227' min='25551355.164738301' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41917.768215752300].[Latitude (generated)]' field-type='quantitative' max='6354725.3827872258' min='2636828.3269962524' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[State, MedCost].[usr:Calculation_1781005191151364:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='break-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='show-null-value-warning' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[usr:Calculation_1781005191151364:qk]' />
              <text column='[State, MedCost].[usr:Calculation_1781005191151364:qk]' />
              <lod column='[textscan.41917.768215752300].[none:StateName:nk]' />
              <lod column='[State, MedCost].[none:Calculation_0461005211310581:nk]' />
              <geometry column='[textscan.41917.768215752300].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[Latitude (generated)]</rows>
        <cols>[textscan.41917.768215752300].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[Medicare].[STATE]</column>
          <column>[State, MedCost].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Income vs Care'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less Than $10,000' />
                <alias key='2.0' value='$10,000 - $15,000' />
                <alias key='3.0' value='$15,000-$20,000' />
                <alias key='4.0' value='$20,000 - 25,000' />
                <alias key='5.0' value='$25,00 - $35,000' />
                <alias key='6.0' value='$35,000 - $50,000 ' />
                <alias key='7.0' value='$50,000 - $75,000' />
                <alias key='8.0' value='75,000+' />
                <alias key='77.0' value='Don&apos;t Know/Not Sure' />
                <alias key='99.0' value='Refused' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[State, MedCost].[none:Calculation_6831005181145998:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[State, MedCost].[none:INCOME2:ok]'>
            <groupfilter from='1.0' function='range' level='[none:INCOME2:ok]' to='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[State, MedCost].[none:INCOME2:ok]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_6831005181145998:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[State, MedCost].[pcto:sum:Number of Records:qk:1]</rows>
        <cols>[State, MedCost].[none:INCOME2:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource name='Income' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Income'>
            <column caption='Median' datatype='real' name='[MEDIAN]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
            </column>
            <column-instance column='[MEDIAN]' derivation='Avg' name='[avg:MEDIAN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Income].[Longitude (generated)]' field-type='quantitative' max='32878440.236689486' min='25990546.743855685' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Income].[Latitude (generated)]' field-type='quantitative' max='6548508.8009296395' min='2693636.5904516298' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[Income].[avg:MEDIAN:qk]' />
              <lod column='[Income].[none:ZIP:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Income].[Latitude (generated)]</rows>
        <cols>[Income].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='State, MedCost' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1781005191151364]' derivation='User' name='[usr:Calculation_1781005191151364:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Latitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Longitude (generated)]' included-values='non-null'>
          </filter>
          <sort class='manual' column='[textscan.41917.768215752300].[none:StateName:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Virgin Islands&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41917.768215752300].[Latitude (generated)]</column>
            <column>[textscan.41917.768215752300].[Longitude (generated)]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[State, MedCost].[usr:Calculation_1781005191151364:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='break-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='show-null-value-warning' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[usr:Calculation_1781005191151364:qk]</cols>
        <join-lod-include-overrides>
          <column>[State, MedCost].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Helvetica' fontsize='20'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='8250' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='91750' id='5' param='horz' type='layout-flow' w='100000' x='0' y='8250'>
              <zone h='91750' id='3' type='layout-basic' w='84000' x='0' y='8250'>
                <zone h='45875' id='1' name='Income vs Care' w='84000' x='0' y='8250'>
                </zone>
                <zone h='45875' id='7' name='Geographic Care' w='84000' x='0' y='54125'>
                </zone>
              </zone>
              <zone fixed-size='160' h='91750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='8250'>
                <zone h='6000' id='6' name='Income vs Care' pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' w='16000' x='84000' y='8250'>
                </zone>
                <zone h='43500' id='17' name='ByAge' w='16000' x='84000' y='14250'>
                  <layout-cache minheight='207' type-h='scalable' type-w='fixed' />
                </zone>
                <zone h='6000' id='14' name='By Insured' pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' w='16000' x='84000' y='57750'>
                </zone>
                <zone h='35750' id='13' name='By Insured' w='16000' x='84000' y='63750'>
                  <layout-cache minheight='145' type-h='scalable' type-w='fixed' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='6250' id='8' name='Geographic Care' pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' w='14000' x='1800' y='54500'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstabs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:MEDCOST:ok]</field>
          <field>[State, MedCost].[sum:Calculation_0641005190018159:qk]</field>
          <field>[textscan.41917.768215752300].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Geographic Care'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='57'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[State, MedCost].[none:Calculation_0461005211310581:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:MEDCOST:ok]</field>
          <field>[State, MedCost].[tyr:IDATE:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Income].[avg:MEDIAN:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <zones>
        <zone h='8250' id='9' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Income vs Care'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Geographic Care'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Income vs Care' pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
        <zone name='ByAge'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='By Insured' pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' />
        <zone name='Geographic Care' pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstabs (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[sum:Calculation_0641005190018159:qk]</field>
          <field>[textscan.41917.768215752300].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
          <field>[textscan.41917.768215752300].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ByAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_0461005211310581:nk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='By Insured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='57'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[avg:HLTHPLN1:qk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:MEDCOST:ok]</field>
          <field>[State, MedCost].[tyr:IDATE:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='By Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_0461005211310581:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_0461005211310581:nk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (6)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:INCOME2:ok]' type='color' />
            <card pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[State, MedCost].[none:INCOME2:ok]</field>
          <field>[State, MedCost].[sum:INCOME2:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Income vs Care'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[State, MedCost].[none:INCOME2:ok]</field>
          <field>[State, MedCost].[sum:INCOME2:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstabs' width='192'>
      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
      af4/mC5cFhwmQQ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Geographic Care' width='192'>
      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
      UeJYRdJ6okCKKum8uLzCkakJTWvo5keehVq1KvVkY8+RiQmWb93KmkEl4Wm2917WKPT+kNne
      unYb9uZIDQH2LDG1Yq7QE9VE7owfpQXNxauMoWNij4j3ECd399RnYfyldbtQPlLG2x4i8AZd
      T9eFYsdjXzHA9uZWnClo2WvFINWwpFJoUPk4ojB4i2L2nGneSClZ396mucsrlPRndGhUypTa
      26ysrqLSns2wZZbterewd0lOOtlAtrI8aCW8qNqUaE3BJKV6wDInRfH34cwn0z+ZaqpByMTa
      ycjTupvx0GBfmUCd9jalUrbXczf7di8hUM0bGBgxVI6bg5OF3oB2t0vJcTQbXp/sotrMUIVE
      cHxqklcXF5kYH9euikI8FJx//Q3ExQtEvg9hCFGEiKI0QpbiXdh/qa3a6njGX6X2Hi3R7+9K
      OCGS3nQHGHQSgzLFbCZI/CjtLTJC2MeUFHkMeWYqQjFzm4T5CcW/C0Cyzxigv7ODXx0zc0AG
      rNTuRZWnq4+JnZ1+t0CiObxkEZI76xvMjIyoK2RJcMM1kw6u4xC0d7h0+TJHDh2K980mjFmE
      i+e6cGuJe996w1DP+VMZsmhL1l9lJhaPw2AsQeeazLuQ9IXghZljhMRhQ7Pe3QVvEIRpYEM/
      WiUI4sQ/13VwnLhufV1MyuL5Ndq8S/9fR1a56/uKAZyCEKgOtpOrtITtuNrPKIiGzJbtFN9c
      XWNnp82xyQkr1mPUbl3NS0NHCJ46epg7G5ssXL3KkaNHDR9A78+br79OuVrddV7tWEuKhSzC
      ST0xbKNmlqYcC4Ai23pQfKf4vpTQXd9ibbXD2MEWMoy4c+UOlfEWdNv0QpdaWdLuu9SrDuWx
      Ft5d+QdaQ3cZCYsxjU3SfcMAUkrCIMjO4CkgkqIpyWxFYRB4rP0HiahiAtLNruX1Dc4cnBvg
      jwxmibhm0xRyHYfZ0REuLVwnSM7ECcOQq1eu4Hk+YfLqWK/Tpu4Krm1tpfWphEAjtIsonPO0
      1QQ99UT6bjY9xCxNVskWneKrimXicdFbUGWSb8kzRSHLN//sZSr1Cn15hhG/zfLNTVbfuMZY
      1WNlaYXK5Dhycwun2eSxrz6a688g66aw0F5A0ZR2ad8wQBAESO1N7bbMyrZFFinz/CAoM8ae
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TRLxauL/AcB5ycVz1VF0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstabs (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='142' name='Can See MD (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACOCAYAAABnjgcbAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASWElEQVR4nO3dfVRU953H8ffdYJxhkgpDt6JADYgJIdouENuKWbHSmAjWk2jBk2hCovTI
      1rFBfIigkhW1UvEB12FXV5QaTTixRnqsYGOLEbcOp2sZ2jrV6QY1VogPpzzYnnEGHc/dP2bE
      B54UBcbc7+scj/C7M3d+d5jP/H4X5nt/iqqqKkJo1D/1dweE6E8SAKFpEgChaRIAoWkSAKFp
      EgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIA
      oWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaX7d3cBut/dFP4ToF4pcHLd32e12
      oqKi+rsbohMyBRKa1u0USDy4p5aU93cXRCdkBBCaJgEQmqbpABzNTyM1NZX8g+fa2mylOaSm
      ppKz/3Q/9kz0FU0HYNy8TEJVlZodm6h1AJcqKdj3Gao+gblThvd390Qf0PZJsCGGd+eNZZ7Z
      wtZtpYz5+69wKgrTc98iBMDdwN5169ljrUdVjUzNWs5rY0K4Yq9kU+H72JqcqKqRsW/MwTQl
      RuNP5qNJ0yMAwOBxP2RmpEqTpYxymxPjxEX8YLgBcHPUnMlHNY0kz5nPG+P9Kds4n8qGK1QU
      buFEYwhzsnN5Y7yRY7t2Ybnk7u9DET2g+QCAgSkLsjCqKqoaS/Zboz3N7gasxwD/4RiuXeUa
      OgAqq78gYCgoSh1bCnfwh3+EMCtnAeMGy/v/o0h+agCGJzECjWHD+Ortz4g/KE4b9ZdHEDgw
      goSEEAaHfIUXJ62D/b/mjyd+j9Vahc1axeXcEtJGGvrrCEQPyQjg5bq7wW8wEUGgqqE8E/ct
      ogP+xpEj/8vjgx2se2shO6pamfzOChaljvTeQaZAjyIZAQDwIwA4z4Db2nQkvfceZ95dQUle
      NgBh4+eQEPE03148lc/X7iNvXhUAxthUXo4a1PfdFg9MPgx3DxwOBzw2EIPu9vcLNw5Hawft
      d7Lb7bz8M/mbgq+SEeAeGAwdze39MBjk6XvUyTmA0DQJgNA0GcP7wOf5yf3dBdEJGQGEpkkA
      hKZJAISmSQCEpslJcB+QmmDfJSOA0DQJgNA0CcDdXHZyUlJIScnntOtm015SU1MptV3p376J
      h04C0I4bF6AoVgq2HwfgBtcBuNaPvRK9QwLQAZ33/6aqAvafg4EDBtyx3XWumsIszxUlUtKy
      KK1u6PtOiodCAtABF6AaQ9GrKrvWlHLu+uO3Njps5C3cwLHzepJnzmSs/jxlG+ezs7ax3/or
      ek4C0IkRSbPIfmMESlMZeWt2tbU7ztZQpyiMnbeCtClTyPypp564uuav/dhb0VMSgE40NfsR
      NeUd4vUqTqfSbvsAvXei5Of9f0C7m4hHgASgU25gMD/MnnpHq2HI0+hVlSNrN1F5/Dil6wtp
      UhSej/56/3RTPBAJQDt+6AB/77TfEJXC/IRQAB4HCBrD2pzpBHGCrQUFlNmcxM/M5a3RQf3V
      YfEApCa4xzw1wY8NNNBFSbDUBPs4+SxQj0lN8JeBTIGEpkkAhKbJGN4HpCbYd8kIIDRNAiA0
      TQIgNE0C0AekJNJ3SQCEpkkAhKb1XgBcNnJSUkhNTW37l5aVR6X9QcoKHezNSiElJQebAxwN
      xykursRx9628JYw5pXZPg7uB4ixPXzKKq31mKYvm2iJi9QqKoqAoz7H68EXPBlc1M57Te9sD
      mb291tNcW8Rzivf2gWPZfqrdsh7iPvX6CKCqRhKSk0mIj8RZb2PL8h9ztMcLyrm5fhVAh5/b
      zvLMtXzy+8s81u52nhJGz8vjCqWLMzlUr2BMMFGYPsZH/vjhYvU0E7WxyzjjvIB5ajPLkhdw
      ERer4+P5sPl1TjqdlC8Yyo70aRx21ZIUa+KLpFWccV6gOOkC6dFJ1Pb3YTzien8KFPY9Zqel
      MTfzJ/zXookoipNfHK4DOi8tdJ0+SEZKBvlFhWSkpJCSkkHRwdPAICJH+YP/CJy/fp96RUFp
      KmNO3v52owCA7loD+wt/TFm9QmiCicK549B1uX/AdY7SfM9i2SkpaRSWVuMAjhZlkZJVzCU8
      I0xGShrF1ZcAB3vz0kjrpA+da+HsBQgf813CdcEkTYgCVwvO5gqKagMwH1uH7lQtQ2bvxWot
      J6bFSjUBmHcvJVwXzOztK9FRjfViD38uAuiTc4Dr3PB+FTTqBSJVlfPnGnB3UVp443oLTUoT
      NUcuk5QxnRH+jRzZUYTNBaPnbmfX9hSGhoQAoKp6/nV0BAM7eOS68q3stjgBePGV+LZa3873
      f4W9OQsps9YRmzyTyXF6LGUbWb7TxjOjvo5SfwjrJRdnf/cbmhQnn1SdweU4yS9PXCVoxNPc
      3xJ5wawzf5ez6xNR9AoRpk+JWbaMcJxAC6YIIxGx8cRGRzPTbCVwoA4dLRz+1POKb7bU4sLF
      qZPN9/8jEW365yT4moMr91Ba+NLid5mS+ANmvxwGwPUbAH7o/PwYPDqRSFWFsO8zc9LITqc1
      eqMRgB0rf8bdVbvt9v+PM1jOgz7exJK0KaQtWc1Evcr56hp030zAqKoc/59j1PzFu6fPrRyr
      PIZTUXhxXOR9PgnVzDZ9SkD8XCotlayaGk7tqrkcbvVsjVlWiaqqXCify8kd6WxvncH2WeHs
      mDaEwKFDMSauv8/HEx3pgwAMaJujO+pqqVMUwkY83fZu3FVp4QC952V9nXabwO1uv7LjXfSx
      c9i5ZQumWD1K0yHW3zwp7nT/A25u8Lb43fpy0NMkjQDbnq0c+MyfhFcnEtR4hK27LajGiXwr
      5D7PLC6epNqlY90BMxNiJrD0g5XoqKXit000o2Pu3AkABE+YQID32UpaZ8Fa+THrVhZz0mom
      gACejQ68v8cVd+j9AJz/DbtL97KzKJ8frdiHqup5ZULkPZYWdn2yrANotHLgqL3DMAQN80yT
      xv2biVBV5bN9azjYcPst79q//z8z3B+uHjGzs/I4lTs3Ud6kEPR8NIMwEJcY573hcBKTJjHK
      +11Ywgvcdz1YQDgRuCjaUAHAqY8rcBFAzAuTSdK5MM0uwgXUbv+AFvQEDjxFonEIptpwZs9O
      4vCyZbToJjAh+H4fWNyu1wOgKE0cKttDeZUVwkaRsXKDZ1X1eygtvHUxEl37HesieXlsEIqz
      jo+2/67tPMNjwJ33GjSaubPiUBQnO1Z+RFOn+x/MnLWLiQu6SvnWAraW2wiNn8nqdM/q8SHP
      J2JUVRjxL0QOCiF2bBCqqif5vqc/gG4Cu82zOLUqGUVRiJ75IUnLPmBGcDgfWMxEVJjQKwqx
      pn28bi5nauCzmM1TsSyMRVEUTBVDMVs/IPz+H1ncxgdKIu+ttLAzLocDenjf7vZ7o5slUO/F
      zZLIzj8S3czFs60MHBJM4B05d3HxbEv7dlczF1taCQ6Wt/6HwQd+Jf5gpYW6DpcwfXC9td/2
      Agnu8G1cR3B4By9yXSDy2n945KMQQtMkAELTJAB9QEoifZcEQGiaBEBomgRAaJoEQGiaBEBo
      mgRAaNqXOwBuFw6HlA2Kzvl4ABzszbmzrjg1NZWMnCK6W7H0im0vqa+/ydtvv0nGTlvv9dBe
      2uMlVC9WrCairSZ4KCZv7S8X9zEh0Nuuj71V+9tJrbDoOR8PAFz3/uxHJiSTnJxM/EgjTXVV
      rNh0sMt6gAsnLKiqntT5uSx/JarX+ndzBcn7X0L1FNOSl+GaWswFZxMfLwinKH0mFa5mFsZP
      49NwT63wqjGnSI+f20Wt8MM+Im3xgQ/DdW0AoKqRzJibxnAAdxx/fW0F57+4TCvApeNs+akZ
      S70T1RhL1vJMvvanQnLL6lEU+GjLAUb+hx/5acu5Nm0luVOicJzez4+WVDAtfz1Tvnqe4k2F
      HLJ5PiQdGT+Td0xTGOzn4vjeLRTssQAQ++oiMl8bjQ5oqC5l5YZ9NOLPqBH6jjveHVcLMVNn
      sdI8m2AdTF06C916E2f/r4LtZ2HVyZWE62Dph2ZWDVlI+V+SPbXCZ26rFZ4BT3XwSXFx73w+
      AACKUkdRXj5f/wpcttdQrygEjYljEA0UmtZyzH8UGYvGYy/dzIbMQv595WhiQ09hrXcS96/f
      5EncXL4KV5u9BTDXHTiVJpqdbuwV/80hWxMT52TzTYcF865d/PLbcXz/+s8p2GNhZPIcXgy0
      s3F3AYVf28iS578gZ8M+rjKKWfNGc3zzDlDaL6LXLd0YzB+P8X5zkYWJ6bgCXicpDJYRQPDN
      Qq+BOm+1wq1a4ZuiZ+3mz9uf7fHzKh6BKdBNjV98jsVipa5JIfLVXLakjcTdYMeiKPiHDOXa
      3x2g86zwfmrAd0iJD0FVQ3nlrUmEdFQx76UPCADgky2FlP3hH0yYlcNrY0L4i7UWVdUTZLhG
      i3d+U1NeQ+OFOpyKwvjF7zBp3CQW5Ex+wCM7hem5IayvjWZ3W4FL5/OadrXCclWIB/JIBEBV
      Q8k2b6Ek2/Ohss/27cPuvQaJXlW5+tkZLl++zMCI8SQkJDP8iYFc9548uFtv7cf/ce+A57w1
      Yx826R2y336VsXEhNJyoobxkDQt22gA9iuKkof4ylx0DSUhI4KX4IW33e8JbT/xAy6M2VzBW
      iaboiyQszj8zIxzw9rfF6b2NXg+4oNXVaa2w6DmfD8DNgnVnKxhi0sieGIqi2Fi+uRIGP0UI
      QFgI34h/gYC/neDIkQt8ZdBdMztvveT5ql9RbTvOtsID3g2tHMxL5yc7jvPMK3PJW3xrSdSQ
      UM9UI+SZb/BCdAAnjhzhb48bCQoMQa+qHDBvo9pWzeaCA/TMWWZEJGMhno8tZoLPnqK29hTN
      wYlMDXCxzFQEwL6Fy2lhDLHfmNBJrXAPH14Aj8A5wAAdgK7tjTYmfQEJv8+kyrqVn9eVsOC9
      N1i6YhdrFlUBMH5WJsN1YPdcAstzJ0MUr00eQUG5hY15FoxGf3A6eRwDL85ZzB/fW0tJ7nwA
      VGMss1+OYvjgBbxdv5qSkjVUAWrYeDITh4NhOLkZJ8jeWsXGPAt6FVBury++N82Hi/iwBcDC
      tOgIb2sAxReaKTq8jk9jTSiKCQhgWeVviSGQDyxm4mJN6BUTAK+brUyVi0I8EB+oCX4YXDgc
      N7qtK3a7HLRiwNDBzMHlcHCDxzDctbGzdlwOHHRfM2y324mK6smvYT01wQHhwXdNdDqpFRY9
      8iUJgO/qeQBEX/D5cwAhepMEQGiaBEBomgRAaFq3J8F2u72rzUI80uS3QL3sy/JboC/rccgU
      SGiaBEBomgRAaJoEQGianAQLTZMRQGiaBEBomgRAaJoEoA9dsR8kI8VznaO0/L2edYtdNrJS
      Mqi9bZl5W2keqamp7Lff/7WGetArjhbn3brmUuF+Lrl9ub/dcXM0P+WOa0F1dRwSgL7iPsem
      5Tt4KiOf90sK+FbNRyz1rlt89bab1e7MIq/Mxsy8bUyJGtTr3WqsLmHzJy1kby7h/W15RB3b
      xaaKcz7b3+5cqjZjtir43yzR6+Y4JAB9xGE/wgnG8nbicHSGYbyV8xKN+37HzfdM/UDPi+kn
      B64yp6Ckz15Mbr8IpmctIGawAd2gKL73kj+fnW/y2f52qbGaxRuOEWpUueq97kF3x+HzNcFf
      Gn4AgTxx83v9gLZmf5z8Yl0WVms9I6avIXFYX61QCYNHT+EH3q9dpw+Sd8jJ5NwI8PuTT/a3
      c40UZ2zg2XmFpFxeT16Lt7mb511GgD51/e616QHQcZWamq/x9sx46vZkc/Bc31/vsNG2lzez
      S4hMzSVt5M13c9/t791sO5fySdh0MseF4Gxp5Nb1RKCr45ARoK+4AVpv/SDc19uam4B5W5Yw
      LsiN4cwxNi9cy9O7chneR0XvpysLyd5qYaJpI+njQny+v+1doeZwI4pzD2+m7vG2rSGDbNZ/
      B7o6DhkB+ogh8tuEcYSy45eAKxzc8QmMfw7Pe20QT+oA/BhnWkccJ1iytuuL/z4sV2w7yd5q
      IX5OHq/FPUHjpUs0XnH5bH87Nojp/1nMtm3bKHm/hPkJevQJ81mfHtPtccgI0Fd0Uby7eDLz
      CuZxCFCN41k3ewxw16Xb/YaRuW4Wby4qobAymiWJw3qxUy4s+w4DYNmai2Wrp1U/MZud6TE+
      2N/O6QyD2i4fE2jUg+NJDNDt8y6fBeprbgdXWmGQwRdOHO/Bo9bfznRyHBIAoWlyDiA0TQIg
      NE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDTt
      /wFiSS96gsrvAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Can See MD (3)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOy9Z3Rk53nn+buVI6qAQs45pwY6Z5JNUpRIKtuSbAXL4531nPXxzs565pyd
      c/Z4zn7YHdtzvPaMNdbK4yBLlkVKskiRTTbZ7Ax0o5FzDoVUKKACKud79wNIimQDJEWxUGCj
      fp+6q6ur/vfWfe593ycKkiRJpElzCBEEQZClWkSaNKkkbQBpDjVpA0hzqEkbQJpDjSLVAtL8
      ejjWFplcWEVrzKK9pRGFXEi1pE8UaQP4hDMz2IeqsIWN6V4mlArsq0tUNrbjtk4QUlvIVkaw
      2rdpqCxgYmGDttYWpiZG0ZkK0As+XGEZ9WU5DE4u0NZ5goIsQ6oPaV8R0m7QTzbdL/2Q1bCG
      RZuDtiIjHkUGiYSAxreBT52LRRvl+NE6Xrs2wdOPN/PjF/upbGwhsbVGNOLBLykJO23klZWD
      tpBPP3aUw/IMSbtBHwI0hmxOn3+CS81lxJUZxIMBsrKySCjUSKEAQa+LmzdHKMnTcPXaII21
      tVjMGVgsWaBTIkajlJRVEAhHyMrOTPXh7DvpJ8BDhYQoSgiCDCQRBOjtu0dbx0nUMgFRkpDJ
      fnnPkyQRSRKQyQTERAKZXJ5C7fuPIAhC2gAeaiQkCRCEQ7Os+VUQBEFIb4IfagSE9JX/vqT3
      AGkONWkD+Agszk4RiiawLswSjCZSLQeAoM+NdcWOz72J0xv41T9ASjA/NcHg0DBOb3DXt4Q8
      DtZsW3i9fiTAubmG0xtiZWGaTc/u/+fjR8K+ssDAwADT88uIby7gJUliYWactS3vB36C37PF
      lscPpOMAH4mVqT5u9vbicCf42mcFbk8s09nRwnBfPznl9bTUlSHs89rDbp3gP//1S/z2l04T
      NteRE97AldBx/lQnctmH0CJFef6HP6X9bBtXugb4vS88yv2BcdqOnWB1dhK3L0JZloxr96bZ
      DMr5P/7odxm9f5VZt5Jtd4Df+uITXO2ZRZORS32JgfsjszTW1xJIQMSzTaZJg9ZSRn6m7tc+
      1p4rL+LOKGFx8hV++5tfZ2FqgvLyEv7ub/6GS89+EZmsiQ2bHW3cjdUR5eSxZu739FLXfpLg
      2iwDA91ktT0JpA3gI3H60tNc+z//H77+R/+BV//uvxLNMLOyamV10UqRK0JjbRmKfV57S0BV
      TQHPPf8qT35Jyavjdsq12wwV1dBZbvpwH6I0cvGRRxkc/Udeeuln1LUd5/v//FMUUoTWQgOO
      ovM8+5SBH16eQf6mgY8NDVPTcpyYd4UFVwRx6AXuqUycO97Gq5ev4wvYsNlc5BQW8Du//4cf
      y7EKiFhnx4gqs5m4d5Vpm5+5VTtF+XkEHUssrufRP9CLyW9l0SWwbZvB5osxNLNOIhHlZIWF
      8JuflV4CfQQUai05hRXkmfSUlZcQCMfJLyhAbzQQDAdIhVtNLlNS136Rk82l6Iw5yP1brG3H
      KLJoP+QnCGjY5jv/7bsUV1dRUlBEz+1uamoqycrLpiA/F6VMjsGYRWTbQSwholCq+cI3/g2m
      0BLDC1sUlBRhycqkMjeD+/1DFLd2UGzWcqrzOKqMYvIMyo/lWBVqI1/46rcp1QYR9JlEQkGK
      iqvJzrJQmJPNrVd+QTAYQ600IEkixpwiEuEAJWXlZCnj9I/OopTvXPppN+jHQCKRQC6XkxAT
      yATZvi9/duOdPv6P+AkkEjtxg/ceTkIU3zzOvf/3W+ck+Uhv6pEjCDt7AUmUkMll7/rzW3ok
      UURi57yk4wBpDjUPxAF8Ph/xeDxVetKk2XfST4A0h5b3TYaLhHys2rYQ41E2txy8ZSbhoAfX
      R/EzPwR43C7ib98uJDbtm8QjQWZn5/CHothXrazYtkj2LSXs32Z6epq5hWVEIOBxMT09jdsX
      YmVpgdUNBwGvi9n5JVIZpYgEvPhCMTxOOwtLq4gp1PIWsXCAmZk5gpEY8D5u0N6rL/CDG8v8
      yX/8Fq+8eoNzx5qwbkUoMQd5uXeNCydOUpIpZ2jKSktTLQtLVmQKNSF/kCPtzQz395FX1UhN
      acFDEY53LE/x3R+8wP/y7/8DJoXE8sRd/v7VSb5yqZHlrQDDU7NsbW6hEuGr3/gaOnXyPMxi
      PIpteYbBRR//6//0Nfq7XsEm5nBSA70ji/jWrGRY9GRo1ThCSk41FyVNy17EIwH+8bv/Lw1P
      fpPVoZtkGbX44+dorc7fdy3vZHqsD5srzPTKTsBs119JSoTp6humMkvJvck1kCQGe7qYmJ2j
      89HH0GhNdL/2HAXFZawuz7O+sYDbJ+HcsNFQkItv28/yyhzdgwv8u//t9x6KYIOltJ729iEk
      IOxz8dLVUTLlEnnlrWw7XmMrGCHqthNWqIkn+RGgM+UQ8Qf43OefQWAnJdqw5WJ8MZu2CjN3
      wyKKuIsTHVV0z7iA/TcAhUrPhbOPsimXoVXBms2GstgLpNYAapqOs33jX/BhBPaIA6xP9qMt
      6eTJJx6n5/otJEFicW6FhCQQjSRYGB8lIKpwrdsIxUSikQTZ2bkYMjPJycrA53Ww4fYiEudh
      2WIIgCACCR9D8ys8/sR5ECQWRm8zuxlBKYmoDBnolSrEJB+zJMYIhEWKLHpGxgfwbrvwRGJI
      vlX+6vsvoVXKkWsFfvJyDwVlKbrgBBAEEUGQIVeqCItqSgrzUqPlHUz3v4HVI6B88zf60Jtg
      Udw5GEHgbV+qgPS2T/W9JEQRuewhjLOJQcamNmhurHz7pXgsikKpQkzEEZGhkO/TcUsi0xNT
      VDY0QCKOUql817/FRRGFPPXPX0lMIErsU1zgg8RIxOMxFEpVOg6Q5nDzQBwgHn94lixp0nwY
      3mUAiUQibQBpDhV7LlZjkRBOtxcxEcfj8T7g25akBNsez6E1GL/XjX3LSTwWwbZuIxCK4nZs
      suXcTvo5kaQEmxvr+AI7OY3xaJj19Q0i8QRiIobPFyDk97C2tk4okprIviQm2LJv4PYGCPi2
      2dh0Hog4wM65Wv/gOMDgzZf50a0V/q9/91VeevU2F0+1s+6K0FxXwvjYBIWlpbx64wYXjnZi
      ysphYXaO0ppG8i3GfTuYVJEIe7l85QpabQaZGSrCcQGf00lMriHhdfPp3/wqJq0qad/v31zk
      /sAUjpCcb33xKbquvYwfHcXVbbAxyIhNRaHKjQsjFy88gjaJMYm98Gwu0D2wiHd9BY1Ri0Gt
      pLz9ERrKs/ddyzsZ77uFMyIjGNUAezwBJDFKz+AoZWY/A3N2kEQG7t7i6os/4GbXLa68cZ2u
      gTEc1kmeu3wPx/ocA8MD/OylOylJBd5voqEQm2sbeBybFNceRSdFyCpv5sLROqIqE1plci84
      naWU2sIcQm4fAGtzVsJ+D6uzY/RNWFGIURRGA7q4g6llW1K17IUpp4LGEjOq7GLUsgTbbicO
      z3ZKtLyTpqPnEcJ+sgsLgT0MYHN2GCmzhlMnjtNz6w6SILEwt4wglxOTlBjUchbXnRhzSshR
      BpiYmMAbiCHGwklPAzgIKDVacnJzUCgUjN27wvWRVfQJN9/5u+fIzMpMehzAZ59neMGGSiEw
      PTtBdkkRCoUKuUpPW1Md/oCfRDyMhBxlilzRjuUJ/uHnN8izmNFkZBAXNBTkWFKi5Z3033iR
      nnkXBtWOS/ZdbtBIJIIkSSRiMURkKBUCoXBkJ9c9HkOSBJQqJeFQCJVGC0jI2MnBjsZ2/NAq
      leqhSH14fySi4RDRBKiUcmKxOHKZDPHNHHytTossiSdBkkT8Pj9KtZr5mWmq6huIhkLoDQZk
      AsTjIkhxQuEYBqMhqVr2IhGPEY5EEWRyFIJENC6hN+hS3p4lGgkTiydQKFWYTRnCrgaQJs1h
      QKvVvjsOcCAidWnS7CPpSHCaQ8v71gMk4lH8gdDbm9p4LEI4GtsvbZ8oopEw8XiMbbcbt3ub
      uJiae4okSQT9XnyBELFIGPe2hxRJeQ8SoVD4g9+WAvb01w1cf4HvX7PyZ//pD7DOz+F2rBHS
      FJCtEVDrM8g1qVlad1JdWcLa8jKS0kBpvonpOStl1XVkGjT7eRwpI+yx893vfZ9nf+tbzPR3
      c6dvnH/7H/53spIYB9iLWNDOj/75ClqDmQxtAPeWn+bHfoMjFeZ91/JOZoa6eKXfxh/+7pdT
      qmM3dq8HkOLc6x+hzCijb2yW21de4EhrDWHRyGrfHVy6CtS2BXIr87g/2IfLFUYvc9HSdoSh
      gQHMqwG++fTp/T6WlKDUmqmrrELQmqgrs0DWs2Sm4OIHiLjW2PAEyIknUEVDbHs8RGPRlGh5
      JyU1LWSMOlItY1d2XQI55obwq4toa2vh1hvXKSiqoKY0l7Bnk/ujs1jMZhQqEZc3iE6lJr+0
      nlxLBta5aWKCilAwfCgCYgBylfrtSOvUwgqtbfUpc/WpjBbyc7NRkgCFisa6KoLe1AeftHrt
      h+tOlwJ23QRHQwFiKNBrFLhcXpRqJRqVgkg0RjAYQpCrMGjkeHwhsrJMRGMSgrRzp/EHw2h1
      BowHwOe7X4SDQRRqLdFwALXOQKrGdEmSxLZzE0mpQyuXcHuD5OTlvt0EKnVI+P1BDAZ9inW8
      m3Q9QJpDzQP1AOl06DSHjXRBTJpDzZ6LQ0kUiccTb8cBRDFBQjwIGd0HF0mSSCQOzjlKxOOH
      xhnxUdnTAIZvv8R//L//mlg8yqp1if7uV3j17hBrtk3cW3YWrav4PNtYrYvYndt4XJvML1qJ
      xmKsLC1gd2zj2rKxaF1NWWBov+l54+e8dGso1TIAiPid/Pmf/CXp0OX7s0ccIEH/0BiFWhid
      WeL6yz+lsaGcm10/RvHZrxPfmmZgcJK6ukrckZ3uA8bgMrawkc9+7tN0X3+D5S0Rk8aLIMvk
      q9/6Fnkm9X4f275TUFzN1nok1TKQJJE7N66TkaFHFCU4oC7Ig8CuTwC3dYythJmqynJuXbtJ
      QXE1DZVFFJaVsjY3zdT8Anq1inAoTG3zMTRqAUt2EdGAi7GpaeyeKIRDlBUV4HPY2PwQY2se
      BsxZ5oNxrUmQkWEi5Hexbk99HOAgs2s6dMjnIYoKk0GJbX0LtVaLXqsgIsoIe3xIxIjGBXQ6
      NWqdgUg4iEKK4/SGKMjPYXNjC6Vag1op4QvGKCouOgC+6OSTiEcJhOJkGH/9MUAfB95tNwZz
      ZnoKyh5otdp0PUCaw8uu9QBpA0hzmEhHgtMcWt63HkCSJOKJxJ5+ZFEUD0UBfJqHm13doGI8
      wPf+4r/hDic4+vgzdFTkkpCpGbv7IonMCkRJzp3Ll/mtf/37GBUCWTk5BLadJNhZQglyBRvT
      g8jym8jWJtBmZGIyHIyN4Udl4PovGF/bJrf8CJeOV/Dccz8mEJPR0VLDwPAsJWUVrC3OEJcb
      +PrXfwOt8uMvL7VbJ3nx9SG+/JlOfvZKFzFFJv/6G5+j5/WfMra6Tduxk4z03iMqmKnPkzG/
      ssnZT/0mdaWprQeIeDf5q+/+mD/4oz/g45kT+dGRpATP/+13aX3sS8AeBuBfmyWaX8+//40n
      2HK6eOXFnzKzvElrczEaXYAtxzZhhZHRq6/gVSiQ6yzY++9Qc/QIowt2FDGJYw1FCKFZrg7d
      RdQW8Yf/5rdSliX5cVDTeZGEcBOPUkbU70VtLKMhI0LXnXvocwqJuhexlLRgCi8TjMSSYgBK
      jR6zRkCbWczj549zpXcBgJZTT7L6/D8QiCp4/MxRfvjiHeZ8HvTmAiKx1MYlpESMq1evY9Sp
      DkRUeqb3Otsx+U58hD0MQJudj9/6Oi//3Is9JMNl96JSikTjEmoxgTm/gJwtEbnoJjsnn82t
      AIbMMi4eryeszEZcXSQRi+JYsxIWtMgjPkRJenu48icPiZm+1+hdlfj8kxY2trcJB52sROLk
      5OZSUFXFxvQI/tg6oViII0ly+WZa8lArZARca/zg51d4+ukvYNtYY25kiPK6BlasM4ybzBQZ
      BFTmQqoKc3A4vFCVur78iXgMjUaD02HHvuWlJCcjZVoAInEZspgf68pOw7A9N8HOjWVWN31U
      VVeybl0AhQajQYNKrUGSyQgFouSY1MwurFJSWUXA5SI314TLF0WKhlEqZEgyORt2O7oME+Ul
      xSnpT/PxILFuXcTlC2LOMjCz4KSxNBNPVEFVaTaTU7MUlFcTdq4SkRmoLC1KSm8kSRJxbjlQ
      KwWsa3bkaj0u+zK1DfWsrW5RXVfDxsIMMkM22UYZiytb1Dc1oT4Aj16nfYPMvPwDEZMIelxI
      KgMGnTpdD/ArI0mI0s4A6ZQjSYiiiCzdzuYj8UBBTCKRypmCadLsLwqFIj0gI83h5n3jAIn3
      iQOkSfMwsHs6tBjmh9/7Hpu+KMcvPc3R2mKiIngXh5n2ZXOqrRARGWqlnGAwjFKlIBpLYDQa
      CAZ8XPnJS1z6jS8gxCJo9AbUSW4Xvh9E/C5+8rOXeOZr3yBDHuMnP/oBki6buvJchicWKS6t
      YG1xGpRGvvTFZ9EkwQ3q2ljg1eujPPtkBz996Sr63Cq+9KnzjPa8zsDsFo2trUyODCGKKsoK
      1Ng2XLSefYbmiv3vye9zLvPia90gqLAYBTadQR575vMUZaYmHrQ6O0T39DZfuNTBc8/9nCe+
      +DVgzzjADF5TBX/4O49gs23yD//j7xFlUFdegCsS4O/7XwegoiyP4XkHlXlmZmemOXP+DEPj
      s7i3vOR0vcbk0iZyTS6/+43PHojd/69DNJpA0IIEiNEwEVFCFY2QVVhHvdvOwtoCoqBBcK/j
      jkQpUGo/dg0JEdRE2Vqcpe7op1kevAXA2MAEhtxCZHI1Tz5yjldev0t752kU926REFOzr9Po
      s7h09hhXXu8iqjbz2LEK1pY3KcosT4kelHqiwQ3ikRiCXEPizaX+rtelxpyNf2WB29de58bd
      PkRBTZ5JhT8QIhoJIanMmLVKfMEIJx/7FAGvB4tZh2NzC6MpB5NOjdvlobiimsD29kOxjDJm
      5WAxapGkGHanm7LyenI0EsO93egLKlEIAlnZBiKCGl2SvDLZuUVolXK0Rj2uTSuhBDhdDjQZ
      JuqrylhfWeWff3aZ9hPHGei+zgbZVBVkJkXLBxEJuPnRi9c4fv400XiEtQ03Kk1qGoYBFJaW
      IBdAY8oix/zLp9Ce6dCbK/Ms2rZpbm3FuTqPKyyjqiiTQExJwLlCSKan2KIjrjIRclhxeMMU
      FJfgXFkiKGlorC1ianKaosoG8i2pDX58XGza18i0GLl1b4qKHB3euIq6slxGx6cpq2lge20O
      SZ9DXWVJUnoiSZKI3bZBbn4uE0ODZBRUsDI/RkNjE7OzVqoqi1iyriEIavTqOP5wgpLyWvKy
      9//8+10bTC2solQbybeoWN0M0NbajCJFSwFJSrC27qC4KJetjQ2M2XlkGvXpeoBfGUkknpBQ
      KA6A712SiMcTKB6CPVYqeKAeQCaTpQ3gA5GhOgDX/luo0kGwX4t0JDjNoeUD6wESovhQbGDT
      pNmL3cekSlF+/L2/4k//85/SPTJLIh4nFosjigmi0SixeJxEIk40GiUhim//uySJO6/Fw7z0
      wuv03HiVDV+IWDRKPJEgHt/5jJDHzpWbXenl1seMJEkM3X6F7jErXuca//jcL1It6cCzexxg
      dZINTTF/9G8fY3l9k7/+y78kLEFHQyW3hueQ6TJpyoqx7PCQUdJIZH0SV0RBZ30JYwt2airK
      eO31G3Q2VqIwmfjHN7rJKa4lHnNyuqaQe+PLjM3ZOHXyFBnq1GcqPjRIIl5PmLAmQigQZ9sb
      SrWiA8+uTwCV0YxvdZHee7e51XWPhMxAdZ4eh9NNx9FHyVApiMk0PPmZp3E77bg9fsxaFdaF
      JZqPHifbYiHblI9RLeF1bpBb1Ui+QU0o4GdpeY3MzEzySwrRpPdvHyuCTE5VTRUyIK+0jIwU
      Der4JLHnJnh1boxJq5MTp0+xMT/GZkBGc0Uu3riaoNeFRgnmnGw2HF6UYTfrPjjSUEpv3xC1
      LR04FycRZRoq6muYGuojo6AaVdjO8qaf2vp6lhfnaTl6EoPqkx4jPlgEPS62Y3IKs43ML6xQ
      VVmWakkHlvR8gDSHmgfmA4jp7s9pDhnvMoBYLJb2zKQ5VKQX4GkONbu6QeN+G3/2nR9h0Kp5
      4rNfpbY0C4CB7lfJrDtPheWT3ePn1yfOqy/8nJBcT115HqOTixSUVrC9Ok9UYeKzT19KejPg
      1ak+FgMZnOusZXrgNr2zGxw7foyh3ruoM4qpMEaZWHVz9pFPUZJrSKqW90WMc/3aFRzOAKcv
      fYYiS2oH5UmJCFcuv8rxx54G9iqISYSRTCV88+kmvnf5RfQhJ3G1ifI8JV7lKC/+wzWEjCIK
      zUY25mcpqS5Ck5HDWN99Chs6WBu/R355DRu2dXJrTvD1z158qCZGipEg645NTJnFaI25nO1U
      0Tu2yJrNhiTzEEtIJKEe5m3Cvi1ev9ZFTsNFAFZXF0DUIqLgeFszv3ijH3IERElFgtTu6ySg
      qekIM0M9bHuDKTeAoNvJ2paP2Jv73T1vU2G/l5n5RYRIFLc3gUKKE4zECbgdmCzZ+MMC/vUJ
      3HGBW8OrZMpjZOVkY9/aIL+0hrZSMwpDJn6n86FLp0iI0HrkDEXaOMtLi1zumuJkWzmm/GrK
      zAoC0eTOZbFbl5CptFhXrAQCfszZlTx6ooGJ3l6242pyFGHyKmp55Eg541OLSdXyQQiCwORo
      Hx5NEbWllpRqAdBnF1CW98tOebs+AeQaC6ebi9lOaPm93/06s8N9hJRmijIViHINMzINdeY8
      isxHiKmy8Lu8FOVo8ElaDGYLGVo1lRWFuKM9WCqaHrqNhkKjQyX6CZrLKDLLiUQj2H0q6gt1
      BIU2MnXJnYZT2nSUr5RVsb4do7fvHmWlxYzOrXPxU5eYGbhH1bEL5BvijC1ucf7C8aRq+SAS
      8TgqjR5NLIBrO0CexZhSPQB1jY0Y3kzpTdcDfJKRJMLhMBrtx19+eRh4oB5A+MR2bjukCAJa
      3WF3SPx6pCPBaQ4t71sP8HEiSdLbS6t3/jlNmlSzqwEkAhv82X/5C/77f/8uM3NW7tzteXsY
      ht9to39iaed9ISfXe345F9dunWRqxf3uz4oGef6f/o65DS+RgJMf/v3/4Lvf/RvW3YG33zN0
      +7V3/f1dSAneeP0q3lAMMeLl+t2+X+Nwk8va3CjdQzMp+35Jkpgbucfg7Dqjd2/wox8/z8qm
      P2V6PgnsPiAjFsSnsPCNxxv4/tU3KMnJ4vt//qdsCkY6q/RcmQgxdMUOlhIETRYbk/exB0Ad
      sBErPE79b3+KK89/n2Grg/raKrp6p7jwrIbx3suoSjp5pspAYHORP//bV1Ho86jIiBDV6bjv
      08DKCAmFjJW1VUR1FhjyMXlnGR3tp67jFJtb27z20vP0Ds/z+W/8zzSWpHb4wztZml9kQ5af
      OgGSyPz0HEJZJp75GYKiFulhc8F9zOx5emKREBtbW6gEGeGAF1EpJ+jdQJaVS0lFJUqVhi88
      fRGPdwtXKM4jp4+TX1JAeVUVkGB2wsYT59pw+eJ0tjVgMahRqVR4XFsszU8xNTZEbm0HhvgG
      2yERMR5hy7HFhs2G1yNy9kgrOVU1xAM+UGdw7sIZpqbn8YZ9eAN+NLI49o2DNQO3qb2dVJY4
      CDI5za2tCEhUN7Ty1IkqBkdS90T6JLDrE0CmyaSjKoslp8hXv/gMa6urRDxbZPkTNNa14PXP
      Ulx6Bq3WzJnjJ1GF3SzbHLR1nmFuKwjIeepLlxia2eDJxx/BvrqMDGg49ijOwHWcUQ3nL53l
      fvcd1B2XKMqQMOQV4tzoRqzvpLgwj1yLDmVMTpUlG3XMzfLyFs88dQmny40q6ESry6U4N7VR
      xfei0WdQX5naW25Gdi6VBgWiy0v/jItzj15KqZ6DTtoLlObQ8kA9QNoW0hw23mUA0Wg0bQRp
      DhVpH0GaQ82um+BEcIu//dEvMOh0FBUUU9nYRnHuu5OY+rtv0XzyPFLAxcDQEqfOdTxUKc/v
      RYxHuNfdQ/uZ8+jk4HWuMrns43hbDf33uqloO03CtciqX0FHQ0VStSQiPl6/dgOFqYRLp9uZ
      H+1hbMlBU8dRVsYGCMszqLTImbBuceLsoxRm77+zQJJE5kd7EXIb8C0MsOwKc/rcRbJNmn3X
      AuB3bzA8t0lljoKe4XmqGtqBPeMAfqYX7Zw/fZyoc42tNTMv/+QmgjGfiowo43Yo1seJxl6m
      d3wBpa4Y28Iw674E3/xX3yRDk+pxyB8/25s2hmcnaDp9HhBZmp9ibktGS1kmg8NT5DWdxDo+
      jkNVknQD2JgeYHrFRbl8p1BJUJtpKokxcv8W81Yn5eWljNrX8aFHSFE75kQ0wujgCIWnS5gc
      n0CVmY+QwmmVS/PzzC76KLVUcqy1kvsTO2nie54dbUYm1VXlKOUC9vkpTEWt6LxWrN4Izzz7
      DPGAm/EhK4+eP4tGiuOPSnjtVjyR+L4d1H6SVVhORZEFSRIJR+K0drShkMvQZeVTX1GEBLR0
      dKIQkr+HkkRobDuOZ81KJBJGIfnpmnZwtq2SivpWlNt2qlo7+fSJKvqHp5OuZzcUai0tzY1I
      okTnqXOcqMpkYm45JVoAGjs6UQmg18i5fHOUc+c6d3Tu9maZysSFsydprKtiPuJFbclnpP8e
      sobTFGbKMemV1DS3Y840Mji+QEVDNRHnCiZLJpoklwKmkvLSGtT4uX5vgqfOtlBbWgRAUVk5
      BpUMlcxARXHyDSCvvoPJ6zepaGnhXs9tEpEolgwNLikHi2IcsaoRdTzE/Uk3Jy88lnQ9e2HO
      LUChNuBenGPaFePU+dT1KBIEOfU1payvrpCTncH66ubO6+l6gF8RMYY/mMBgSM1a9l1IEn6/
      H4Mx9UUmn0S0Wm16QEaaw8sDBpAmzWFi3+oB0qQ5qOw+XEoS6bt9lamlDWo7z3G86YPdegHv
      JlPLATqbk+sCPAhIiRg93bfwxtW01xZyd2CCupZOctVRVr3QWpfczV48FuDyi5xXfQcAAB90
      SURBVJfJKK7l4ok21udHuT+5womTJxjtvQvabGoL9QyPL3Ly0SfIS4HvXZJElqeGSWRVE7AO
      sbjp5/S5R1IWB3hblxhnsLeP6rZjwB4GEHbO89qAla985hTTy+vcWR5hyubhwpmjvPH6G2QU
      1VKs8tK/GqJYGWHT76Pp6Cm2tyNM9t8ggJFvfu3zSRkWfRCIeJ0srvko1Dl5/qeDPP7sZ+i/
      e5ccbYRtXVXSDSDsWqR/coGLJfUA3Lrdy5lTR7h/f5Ca6kbuvn6F1ckQaqMFnz+SEgNIRMN0
      37xF2SO5jPf2o80pRZ6qEZHvILC1xvWuPgobd9ygu0+IESVkcgVO2wK3X3mBX3SNIEWcXHnt
      NfKaz+KamcHq9PKpTz3C7Fac+vIcNl0+HNse/NEoC6OTBKMPZzwAQG00YVSGGZy1UtfcQveN
      63jDCTpOnUG5D7EeEQO/9fVvstDTTTgWRUSOWqlEkOuZGbpLzfFz6HQ6TrdVMje/mnxBu6BQ
      6ejsOIIkSZw4/yjHKwwMTy+lRMs7MeSW0lxV8navql0NQJtbxbk6C2PzDi488yU+/8RpjFnF
      fObTTxNeGabsWCcNtbVkmrMoUge4PzKDUmeitryALL2RppY65LLUW3vSEGQYDDqqmjqpLrFg
      MFk4dfYkGo2eksLkN39SqJWM3b9F2ZFO7nbfoL2zgZuD89QUaXEERPxOB41trfRPbdDcVJ50
      PbsigCk7l1yTjoBzjfHVME3VpanR8h5dRSXFaJU71+feXiBJetNKBARBQpJ22qa89fadFioS
      PTevsOqM89innsSsUyJJ0qFor/LO85CKY37r+z3ubUyZ5re1vOMNSO99LVUcJC3vID0gI82h
      5oGCmGg0mh6SkeZQ8a6FevphkOawsWccYGKoh+lFG7Xtp2iqLNhnWQcfMR6lf3CS5toCbvUM
      U9fSjn1hHFGTzYmOJmRJXO9KkoTNOofMXEC+2YB7Y4l7w3O0HT3K8sQAMlMRuZoo01YnZy+e
      Q59Sd7TE3PgwS3Yfp86dQa88WM6RXQ0g4rby0u0xPvfEcWbm5tmcm6CppZLZFS926yRhmZmq
      bBkzc2uoTQaUGTk8+/gF5Adsk5M8RHrvXOXOhIuYY56K+lYGb9+ipKqUwb5+2lsa0KqSd9GJ
      iQhXX32J1qe+Rr7ZwLXXXkFuKmR5dpCNkJbEQi+6Y81ENueZXe+gvSwjaVo+EClO/8gQiXCc
      1fp26goPVuLeruYoxiIodUbCHjuj97uZmZzH7d5icXUdh9fPeN8wC2s28vLyiKLEubVC4hBt
      HQLuTQZHFkn4t3B6QhgMOuSCRG5OLpmqGMF4cmMgMoWGE2c6kYBEIk4sLKOhqpDVxRU0ah1q
      JZhNWZSXZeO0byRVywchxqMQh6K8DLyeg9XHCfZ4AmjzamgvGKdvfJnmE2fJwsX9wQmKyuux
      +R1UVZdSUJhHttmMNiQSifqRHZabP6Az5/G7v/97dN+5R2NNHtdv3aOypo7hgV7UWcUYlLuv
      LD8uBMBgtKDUKrnbc4emYy2MzazTeOICc6O9CJZS7ItTWDdidJ5LYac6QJCrKS7OZcsdpSYn
      M6VadmPvdOh3xgH4pR/3sPj5fxUkSUQQZO+JkezLF+N0OMnMtiBIEoJMhiSJ7PxmHBzfuyQh
      QlL3RR+FdD1AmkPNAwaQvvjTHCZkMll6Qkyaw83ubVEiHnombHRUmFlwxmmoKn6fj5CYGBoj
      M0tDXGOhJDcrSVIPDvFIkHvdd/BFoLGhlpmZeRo7jmGfHsAZVXPx7AmUSUz9FRMxeu/eQZ1d
      Tnt9BRMDd7Ha3RRXNhDesiKYi8nXxZlY3OL8xTMpblQgsb44w+TSJifPnEafRPfwh8HnstHV
      O0Zj+1Fgr8ZYIScvXL6K/EQBMx491rF7hAQdZp2K/EwDIU0G9pU1Yn4XkjYHWchDWWkWkQzN
      oTAAuVJNQ1MDz/3sFUqLc9Br4M6duyyND3H0/KMk+0G6Od1D37ydfK+M9voKSqvrmZz6GZJQ
      Ss/YHGJ8gQunG4nYphldauFYVepmKIixIJevvEFuXh5OVwB9fgpjEsDy4gL11QXc7doZtLL3
      nOCQny3XNrFIEPvmJiODXbgda/zT87/gp//8fZzBOHa7m/6uG6yubBHyOAkGQ/t2IKlEkMmx
      z0/QePbTlBSVkZepJxFwcOHJT+FbGmYzGEnq94f9IXLzSnCvrSCKIip5HK+QQ5VZgUajR0OQ
      3KJS8vIMeFxbSdXygYgJFEo5uUYFdkfq4wA1dfVcu9HH8VPvUxAjKDQc6TjGhbNnyDFnIKIi
      P7+EzmPHKWk9TlNZDSc6a5HUSgqLi8nNz8WYmY3JcHjGdQbDMjpq8nCtTdEzsUxhYQlLMyOE
      ldlkaVRJ/e78uhYS7iXMhUV037uJd9tBU2MLar0FnTKBMbuY2ZEe5u0xyguyk6rlg5Cp9JSV
      FbG0GSQ/P/VxgN4715DUOpybTuBDzgeQRAkE4YFHu/hmTOCwb51FMYFMJkcSxTfPU/LPiCiK
      CALYbRvkFhS+HYh8WwM7v4/sIBQmSdLB0fIO0vUAaQ41u9YDpO0hzWHigQkxaQNIc5jY1Q0a
      96/xix4rn3/sNAuDdwiaqmh+sybgtZ8/x/lnfwPNwVrO7SuxkJ+rV19jcdVGY2Mj6yvLxBU6
      DApYWnPyzd/7NhZd8jbCscg2//SDn1BQf4QnznQy1X+D3tlNTl14nMzEJn0z22TI3VjXnBy9
      +BmqC/ffDSpJCQZvXUFVeRLvfD8rNidnH3+GohTMKniPMLqvvkxR82lgDwOQElE27Gv8f9/5
      S9xON8cvxPjz5/4edUEVis1xhv7sT+g8/Rgz/beJouQ3v/Ft8jMPjwdIodFz8fQx3DfGuXD+
      IjcvP09R5+NkxW0IYw4ytcmdjxB2r7MdFsmJRgEYmbDx2Uc6uTU8TsA2gjyrns4Trailflzb
      AUiBASSiMTbtbkw520xNTWLKLkAg9asL2/wg90fmeKrmOPA+cYBEOEhCrqWtvgyf04UuMxu/
      343OaOHZx06wvmRFMhRRbFLj2N5jyvtDiiAIjA7003HmDIIUZMWjoirfzMTYNO2dHUnPeozH
      5Tz+1KfZmprCF/Ajl8VwB4L4HGvE5BpWlqzMzoywGDLRVpuadGiFWkN1VTmCIKAz59BUmsXq
      uiMlWt6JdWEZo16GdXWnTmLXbFAx4mFyxYU86GR5w0NdbRVz8/NoMrKxaAXyci1sR5X41mfx
      y4yc6Gw5RNVgO6zMz5FbVoGaMDNrbmrLirEuzpBfVos6ycvDRCzAnZtdZFfUs7U6Q11tLWPj
      S5w4fQKDIo51zYV7Yx53UKS28QglBanxv3s3bQRVJmKuJWaXXZw8cxpdiksiJUlie3MNtFkU
      5lnS6dCfaCSJSCSCWnMAZhV8AtFqtels0E80goBGe3j2XskgHQhLc2hJzwdIc+jZIw5g4+W7
      4whI6Amh05soaTpJsUn9nncmuHblFheefISHsxH6XiS48uK/EEBLY3URA6OzVFVVsbY0z8qG
      m9/+9reSGgcAWJseYDFg5GxHDeP3rzFidXP0xEnG7t5CMhZSbIoyu+Ti0rOfI8/43t9tn4mH
      +Jd/ucIzX/7cHo2oUsfucYB4iGXbBjJETIIPnc5HMN7F97uH0GkzONGUy+3hWeqOnMG9sMSP
      //a7rDrDfPkbv0NFXmrzvfcDMRJgYcVKVm4VOnMBlTnLWO0BHj3RzOv9K5iTHAeIBJy88upV
      LE2XABgbXaStvY7+3n7W12xIigDnvnSJpckXWHOEU2oAkiTS9cbrzC+tHIAowIN8qCVQJBog
      GA3SdO4S2YpthgfmuPT4RWzzEwQ8PhRqFfGwB7fHk2y9B4KECMdOXaJEG2N0eIz8ilpi23bG
      Ryc4evJU0l3CazPTiEodVquVYDBAbX0p49MzJIIucitayFWEWN5y0N5Wx8bqSlK1fBCJcIC1
      zU3iQTcbW96UatmNXTfBibCbgelVBCTUQhRBJkOtMyIpMwhvLJGTb+H+wCTNnSdwW61odCJL
      6y5OnbuIJePh90pIYoy+u7fZjmloryvifv8oNc2dCJEtiqtb0SZ5PShJEmGvgxVXlJXFUUqK
      Cpld3OLkyU5G73eDPp8Ss8Tkop0zFy+RaUjucuyDtEqSxNz4GFXNBytelE6H/qQjSQSDIXR6
      XaqVfCJ5wADStpDmMPFAW5R0PUCaw0Y6DpDmULN7W5TgJtdH1rh08sg7XhW5/ep1dDlGymrb
      yE61b3mfEeNhuu/cpePcI+jk4HGsMLHspdAQp390BoUxB3XCh6TO4rELp1AmsRePZ2OR63cH
      8cWVfO3Lz7A40s2Y1c3RY0cZ7ruLylRMgS7C7Iqbs49dIse4/7lCYZ+Tqze7UeuzyVBHsDsj
      XHz8MTI0qYkE+Fw2hmY3qc6V0z28SEvHCWCvxlixAHOLc1gH7xGOJjj/2Flu3brD8qqPcydr
      kKHkx91dFFQ24VkcxicJnH70CQa7biLLKOfbX/nUQ1cov71lZ2xhhpazjwAiy0szLNgFjj95
      juXFOdRZCpbWtOjd87hDneQaknfRGXNKqS+xshLLQg7oMwtRTc+ybHdRXlrCG11jBDKhtaGC
      vqE5njrXnDQteyGJCdqOHOH6q29Q+9gpZieusemJpMwAlpcWmbd6qS9rIU83y9ySDXi/JZCU
      IJ5h4nxbKVNDw+SUtFKWZcIfCOH2eVGo1KwsLxKL6jjbUcvSig2UalZmFkjs11HtI1kFZZQX
      ZiFJIuFIjJb2VhRyGXJ5Aqtd4mhHJ6q4i5lVV9JdfYIgMblk5/iRRsLhMH5/gJqaajatK8h1
      mVhkISzFBdwfnEChSM0FJ1equHXtBp0XLhKNJGisLsCxlboeRQ3tHagECAe8lFXXEHDuGMCu
      Z0emyqCtvg4BCUuGms5yPZNDA0iVFdRV5KDT6/F5fRgyLegSAnmFJhQhsIYDFBVkIEnw0D0C
      gIryOtT4uX5vgqfOtlBfXgyJGE3H2pChINNkxHT2HGZt8v3utdX1GNUybt++Q25WJvNrXo4c
      PcLsyM4U9JwMie2cSk50VCddy2743VtoDBk4bBuYNDHsIS2nKgpTogVAEOQ01pajUcK9ESvt
      R3YaY6XrAX5VxBiBUAK9/gDk4EsSAX8AvdGQaiWfSNLzAdIcah4wgDRpDhPpeoA0h5494gBb
      3B5f5+Kxtv3W8wkhQde1q7ijMsoLLczMLqDOKkYT3CCkzOLJR88mdT5AIuLn6rXrKDNLefRk
      G8tTg9yftNJ+9DhzI32gzeHJi8e4fe0Wpy89mtocfElksLeLNUeY849eJEOT3FTxD8LrWOGN
      W/3Uth4D9ooDRH2Mzc6xPT/MsiNMU3ke8uwSNmw2THE3LlGBxx3g81/5GgXmhz/7872I0QC9
      Q/0UVbRRUt2Ia20ehcXA6zeGaTl5LukesI3pPkYWNqisNAEwNtyNI2hGEMOU17XQ9drrTGaK
      XLl2lxMpNgAx6md6boXWCgsjU8ucba9KoRq4+8YVPHENXp8feJ84QNTvZt0T5kxzLm5J5Oc/
      +iGDfbeZckjIxChu2yr2zYOX370fiKKMx578AsXqEMvrWyysRTleW8znvvLb6L1WNgPJnQ+Q
      iCVoPnIaz+oS0WiE0pqTfO5CK4MD84z33aH2+FkGeu+ToY6zsuZKqpYPQlDpycvScvP+6IHo
      Di2KCc6fO8P6wiKwZxzASHtrO3KfndmNMI899SRGUSKzIAeFoRjH/BCy+gZM+tTlmacSmUKB
      Y3UGn2SitVCP72g7coWK9blhEhnl5OiSmyaS39DJyGtvUNrYyJ3uG5j1WrqGV2moLqVnYBOt
      Y4svf/sPmLjfQ2lhanvyC4DOYCS/oomm2vcbtbU/HDt3kes9g9S37oxIen8vkCTtOmt23+fh
      HkB2Owf7eV7e+i6vx0OGybRv3/tROFDXy1vzrwUBWbogJs1h5oH5AOlAWJrDRup3JWnSpJDd
      4wBhN7eHV6nOEln0qTjb0fAw5rb9SkhinPHRMapa2tEQZ6j3Lq6wnNb6UvqHJqltasG+NIGo
      zubk0eQUf8cjQSYmF2horKTr9i0yixtoqytDkiQmhgcpqW1GGdtmbsWDURliyurkzIVzGNX7
      7wiVJImNxSliGcUEbdOsOsKcPnsKnTK1HaTc9iXuDs7S2rnTHn2PQdnbvHL5Bcw6Fd/6nW/x
      i+d/RFjQUVVkYnRqmcLKBoStBexRBcfbK+npGaS0oRX3wgxxXRbPPvskKtnDZTIum5U3uu5Q
      0tSOMh5Goc9GXB/i5ZcmOf3YI/Tduk5VfQ29vYN0tDWhTcJAaOvcKPf75smUu0kYyxntu09b
      XRmO5Ul+dvkNfre4lsGrL7CtKEMXt9HeVEl33wxPnmn82LV8EIloiJtXr1J29mlWJ+dpLMli
      ZGqFky3l+67lnfgCETKUEUYmloD3WQLFEwIqMcGmcxt/IMj8zBALa4s0HD3B5soMm451Fpfm
      sG06iEYD9I+OYrMts7SyRDj28O0jsoqqqKvMQ0JCkquIe6z49eU8ev4ofV138EVELJZsstQx
      gvF4UjRU1rVTmKlBTIioNXrkokg8HuXqqzfJ1MkZu3+DBWcIp81GQVEeXfdHkqLjw6BQ6Tja
      2YFMqSEvU0fP8NSBaIyl1eopLson6NkE9ooDKPWcvfAo5+rMvH5vEoVGT3lFHfl52eRazERK
      Swg6NAiZcXQaHQZzDma9GbnJQEylQfEQ9kkUgPzcYpSSjyvX7+HZ2CArX4k3qERjMNNQVcP4
      8AAaSykGVZKWHIKMvKJC8mtqGb7yBrlVtdzr6eLpb/0rrGMD5Fe3cP7scUamN1AkHGjMRRxp
      rUyOlg/UCsZMC6JWjUOlJrOgkvqq1NUDvEVo20b/9DrVNa3Ah6wHkN6scHnnsva97xME4WD5
      e5OFGMG5HcGS9csWkNKb85JTEQdwO11kWiwPzHA+SL/FQdKyEweQEARZuh4gzeHmAQNIX/xp
      DhMPNMY6EI+oNGn2kT3iANvcG1+n2iIw54bTRx6MA2zZVtBnFz0w9CzkczC3FqClvixZmlOC
      JCaYm5mmpLYRRSzI3a7beMMizU0NTE/NUtvagWNpjLgmh+PtDUmdFBmPhui+fYvs8iYaq4rZ
      XJlmcNrGyZMnGL9/i5DSQl2hjvHFLc5dPIsuBV6JeCTI3e4uMkvqMYjbzNl8nDt7EnUS+yW9
      H7FokJmFdZrqqlidn0aTXQKA/I//+I//+L1vTvjX+a9/92PGxye4cPE8965fZnrJTti1yuvX
      7uDwBXn+b76DNy4hqYyMjQ7jdyzz0pWbyBQy7vQMsb5sZWnNhuBzsuYXyMsy7vcxf6w4V+f4
      4b+8xJETp9EqZBgNWrp7BjDI/ay4w6yvrmPIMDJwf5CW9rakNsZaG7nNupjHyN0uOo61szw/
      j9exgj0Kt6/fobSqiumRXhrLzQwuRKgpy0malr0I+rZw+sJ03ejG7fFSZoI1v46i3NTMj+i/
      dYWeGSfN5Rl85zt/S1lDO3/1F3/2n/b8lYL+EMQSbKwucvfeBDMTw4xNj1Pa0MzS7Az5RTko
      pQirdjdT8zPc77rDqXNn0Mhh9NZrRLU5eBam+Mlr18i0pDYl9+PAUlJLS0Mxb/oQsM2N0Xz2
      0xAMkWcxkogGKSsswKiMEkpSHOAtsstr2Zwdwu7xI4kiOUXlZGcY8dudPPH0M2yM3yOzqIDu
      vlESYnK17IVKbaAoNxuN5EGQKzCbdSRi0ZRoATh6/hI6mcS1F36KwZLB8ptzgnddAgkKLacv
      Ps7jTZm8cm+OxvoyomoT5QVqsvNyCDkLiekToNIyN3AHlTGThpY8Xn/1CsePHecL3/593PYl
      6hvLWBh2UZR5AFqI/JoIQHZWLgrRx9WeKSwxJe3VubiECqzjKxQVFNB1twu1qQC9MrmpBxIi
      KpXA0ZPH6b57A1k4yKozSHV9GdNjgyiyKtDJJOTaPI60paYvUDS0TVdPHzllLWQa43SNbvDY
      0ydSogV29rcFeRYeOfcEdeMDCDk7tQkfKh36/XLf33p95+87/lUAKRHh2qsvU9h0joby/X8E
      Jw0xgm3TT0G+5ZcvJUQEuQwkkZ14SfKdCaIoIQiwubFBTn4+SBIymQxJFHkrKCC9+VqqEEUR
      QRAQADHFWnYjPSAjzaHmgXqA9HyANIeNdxnAW/Oc0qQ5LOzRFsXP2Lyd1obdW1iIUR9TKy4a
      q3Z8/U6blZAqm2KLPnlKU4wkSayvWMkuLkctk5geGWTDG6G9tZHhoRHq247gXp4mpDTTVleZ
      1H2A37HG/ZFpFJoMzpw+ise2zODkHLXNHTiXxlFll2FRRZlacnD6zDGUKQhwSpKE32UnKOhY
      mxtlOxCjtrmd4hzzvmt5J+HtTbr6xyitbgL2SIdOhLa4fGsAAOf6Aj99/jmGpxfpvtvD1to8
      YzPzTE8vcvvaZV557Tp22zIrq2u8/OLPudY9SPf11/j5z37C/Ooqr11+gSs37hEXP9lPFtfq
      LD94/meERZDiQW7fvwcyOYN33iAzL5ubP3+O/lknK4N9eEKxpGrRZGRRmKlmzelFDgz1XccT
      kZAlvPgSCm68dgOb3U7YNs3IYmpG1yaiIX76w39g0RmmsqqG5flZFOrUD1WZHr7PynYYlWqn
      o8ne/ro37xrdt29T1nySWy9eRsg0k6sPs2DzYXMH2PausBFUo2wuxSsTcGw5WB+0kpev50Rb
      CX3DI/g3NljeWuTsyaMoUjQc4eMgq6SWtuZSJEAUBTo6TuFcmmJx3csXTp1hPuFFazRjUvkQ
      JTGpWhRKNfPWdS4+8jQABWUt5IT9DA4t0dlcwuzIMMXl1YRdy/g9LmD/77oKlY6zZ87hFCDu
      2SCr8ij5B2CEbkZ+OSezo9zvuw/s8QQQ5GrizkX+5nvfQ2HIYeDWVcqOHaPEIPLGrSHMGWYs
      GQb0+iwsWWZ0+gwMShGZKCMnz4wlr5CcnDwy1AriokBWphnpE55mJAAmg/n/b+/cfqI4wzj8
      zMweYBdQCgUXUOOpiBYlNk0vTKtpb5r0P+pt/4CmNqmJ0cakrYfGaLQROSgn5SDnXWSBBbJn
      loXlsLvsgd2db3pBMFLBmtRlSdnnajIzmbwzme+bye99f++HIiJ09A/hnZ1gJWPk4qXPaGru
      pOzsJZKrs/gSBoqM2W3/pwmVIvNBKkqM9PW/YGHew6Rngaqqg7Q978F0oAL78As8oQyWshz9
      ckhQYDJhMuoIRcPUN3ySmzj+wfpakNEJF9WWI8B7+gE29dxNpDd0Zk0DWZaAje23eggJgbTH
      9N//hEjiC0SotpSjAbIsI4SKLCtomkBDymod0BY0jTm/n8rqahACRVEQQkWS5D2rveccTUMI
      gawoeT9Anv1NYWHh1jyAXp/bzr158uw2WwZA/nOZZ7+x7RsvUmv0Dw6TSMZ42T9EbD2zeQC7
      w72b8e1RNNzTdmwTMwCE5ueIpQQzditjDhfZVnyFSGMd7MM1FwIgujxPb/8QyVSG5FqY4HKU
      UMBDd+8AiXR2Fal3EVtZJBRJEvDMMjAyntPVQzVNxeOdI5OM0NPzktV4EtjBD5CJ+vj+h5+o
      LNJz49YDjhy2MDDQT0FJMSNDr4gt+Ri1WjGVljPU00kwmqGqsnzfOMrWw4s8ae9HrPhYyyjc
      uXWbUw1naWzqIOB0caa+PqsLZMTmJ2gdmmJyxs/n5+t4dOcWlsqDDM+sYGu7x2pBFeHALMVS
      mMmgwvGasn+/6Acmk4zx27WfUSynWQ64CDjGUcpPUF6Sm1xAX+sDnk+EiHvGMFdUMDrq4s/b
      N3f2Axw9XMbDv1o4U3sKj9OBz+Wga2AcdyBE76Cdj4o1Wp48pK1vhJaWdhLp/+PqwNujKzRT
      pKSZ9syhK67k4oVzZOIx5PQ6Qo2xLrI768bXkqQTAhGNIICjR2uw2uzE40m++vpbdJLEubO1
      DE6t0lB/JKux7ITOaObyl5dBUjhfV4uipEgk1nISC8AX33xHkawRX0tTe6IaRU1sxLndyZKs
      49SnDSx6Q5w+eYiVxSAYCjDodZQeMGNQzFgOWVhWS4iHw+hLKzHkyOqWCyQJkAQlH1dRU3mA
      uKsAvaEAk9mIJvTos9wVz2AyYVQ0jKWlDAx2k8qkkApN1NUdRyevUGCQeXj/HnJxDeGlCOXm
      HJSjS6AvMGLUCbq6OoilDZQU5tAXIkFRkYnaw8Xcvf+Uk3UXNna/Vzm0piFe6/1beV3zvU9+
      fzYRYqP2/81noqkqQpJQdkFMUFUVWZbwOF1UHzuGJDSUvToJaQJVaCjKHuiYpmmoQkVRdHk/
      QJ79zVt+gHQ6nU+E5dlXbBkAQoj8AMizr9g+D5BOMD4xxXoqwbh9kkRqJ4VH4HV6d+76q2Vw
      ewMfJNC9wHJogU1ZPeh3M+30sRT0YbXamHH7cc9MMjYxjapmRwXSNMFicAENiEdXiSY2V6PU
      CAXnSaYyOKcn8AaXiIeXGBuzs67mZkITaobpyXHc/iCzDjs22xihcCwnsbyL7f0A8Xl+vPIL
      I73dXLl6gymHg+aWVvyLITqbm2lufcb8Uhib1Ubjgye4HeO0PmtncSFAZ0cXXb3DhEMB2p41
      cedRxy7fUnZY8jq4fvN34gLSsWU6ugeYtvYwt5pmyTuJddrJ48anhCPxrLUBd9i6uXu/hUw6
      wR/XrzK7sApAMrLAteu/EnC+ou+Vh67Hj2luaWLe78TjX8lSNO8muujEtxzneVMjkk5PX1c7
      0T0olf8NlrZt+UDzGVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ByAge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='By Insured' width='175'>
      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
      /ncK9PYGWVBYw4vpAF4Sbl2Ee1zM6BXwx8dB+y9qOd7WgUlZSV7WtEgdhtxDIn6tMvfDT1BW
      OYV//+lOdu9qoWHbHPKLtjA1PYPEWPj0V7Xk7z6Kr2EBEBxzGzHx8MmH53hmXTatexuoaplF
      2aLk2+boonr3v4jFG+7vofN8mPSMZJI9iSTnPsOxzR9zhTkkPDKVxJEV1pOUCLTz+8ACAAbC
      t/bUza2YQ30wv6iKnLmJZDq9FNaV0jzzIEuTv7hXwlgX1FPQ95fIfVR2rZ3q6lJO9ASAAU4d
      exe8KXg++zfKSgtoGRnv/NdW8M5juncGT3pvUt/UDoD/ncP08TiTHfgcmJgwfKOypMx8cucY
      Gkqq6B6I2NHIPSBy57zTllG6/CwVxWvZB5i4NLbsXIInCYqXn6V6dHwOW3cvIxY3y14uoiO/
      iuz3XBgzibxXt5DIEOPjIMTokkzW5krac0ooqX2fppKsSB2SRFnk70kxEKB/CDyOc3fjhAn0
      DzLB86fficbv9+v6vCP0Oe8fI9bB83XGceN4HrhrYMtd0I+HxVqKV6yleMVailespXjFWopX
      rKV4xVqKV6yleMVailespXjFWopXrKV4xVqKV6yleMVailespXjFWopXrKV4xVqKV6yleMVa
      ilespXjFWopXrKV4xVqKV6yleMVailespXjFWopXrKV4xVqKV6yleMVailespXjFWopXrKV4
      xVqKV6yleMVailespXjFWopXrKV4xVqKV6yleMVailespXjFWopXrKV4xVqKV6yleMVailes
      pXjFWopXrKV4xVqKV6yleMVailespXjFWopXrBXReHtOHWD1ihVkZ2eTV9lM38h4v7+FvJHx
      1ZVvjY4T8PNa3vD4itWVdPaFgQCH8law50z/6Hb7Ot8iOzub8mZ/JA9Hoixy8fadorjmON/d
      Wkfjvmpmn25gV3M3hHv4p+17mZ5XycF91Tx++p/ZdsgPDNCyYzsfTM/jjcZ9FDx+jp3bjhIA
      Pg9+abOdh9hQcZi0leWULU2N2OFI9EUs3nDsVIqLK3g2PRG3k0TqbLh8JUjA/wFdzGdtVjKx
      zjTWbH2avp//B/2Bi7x9AQpeyMLjdshcs5H4vpOcDwxvLyZuAv2dB9hQcYR5udUK9wHkjtgT
      OUlkZMBAdzPPlzQQdLkofDENfncaeIiJtybGxQzPHwfgJSF2ZHxcDHEjvx0fB+2/qOV4Wwcm
      ZSV5WdMidRhyD4n4P9jcDz9BWeVWFqcYdu9qYQCAEOExZwfHHI2Jh08+PMfytdl4LzRQ1dJ9
      xxy/33/HL7m/RGzlDff30Hk+THpGMsmeRJJzn+HY5o+5Gv5rYPCLeMOh4S9Dww8Hbn3D7eZW
      zKE+mF9URc7cRDKdXgrrSmmeeZClybGjz5eaeudphAK+v0Ru5b3WTnV1KSd6AsAAp469C94U
      pqQ8wRQ+4Ej7p0A/LXt/CQtn4XFm8KT3JvVN7QD43zlMH48z2YHPgYkJwycaSZn55M4xNJRU
      0T0QsaORe0DkznmnLaN0+VkqiteyDzBxaWzZuYTY2Fhe2rKEguoC3gPMpIW8+vxcAJa9XERH
      fhXZ77kwZhJ5r24hkSHGx335RMNN1uZK2nNKKKl9n6aSrEgdkkSZyxhjIvqMAwH6h8DjOLeP
      hwP0D44xTphA/yATPM6f/DfN7/ePeTrxIJp9YHa0d+Fr61rdddvjiK28o2IdPGONux08Y+6N
      G2fsb8gDTj8eFmspXrGW4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIVaylesZbiFWsp
      XrGW4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIV
      aylesZbiFWspXrGW4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIVaylesZbiFWspXrGW
      4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIVaylesZbiFWspXrGW4hVrKV6xluIVa/0f
      fu3meKFd1X8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='By Age' width='175'>
      iVBORw0KGgoAAAANSUhEUgAAAK8AAADACAYAAAByMDP6AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWDklEQVR4nO3dfVxUZd7H8c/AwMwwIAoqKioqpJhYoi90xZdW4ssHKB+QaEkT01qptA0f
      QVe6tfUhn7B7qbU7NRXFDRPTRM18yNywZJUME0xNXXQzBAV5mBlm4Nx/gCiIK9YuePL3/sfX
      +XHOmWvg68U151ycS6MoioIQKmTX2A0Q4peS8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS8ArV
      kvAK1ZLwCtWS8ArVkvAK1ZLwCtXSNnYDHmbnPp5PbPLJGjXF4ENU3CyCvF0bqVXqIeFtRFZr
      AYryBMtWj6cpNrAVcOiDOFbFbKHHlpdwb+wGPuAkvI2qFNw98HQ1Vv0gXBk8ciCJx05z1Qyu
      JRkkLFhI2iUNisGPKfOnMcDLSMnF/SyIW8VZkwbFrScz575BgPsFVs7/BPQXSDt5DcUtkC2r
      3uBy+mbeWpLCNY0Gg08IcXMi8TaWsGPxcnKaO3Jo73EUxY3QmfOICPDg3P7VzF/1GSaNBree
      4cx9IwxPvY2TOxKYvzENAJ+QaOZE9sXYmN86AEU0mqykaCUsbJKSsC5JSUpKUpLWxSvjwsKU
      cfGHFKtyRUkIC1Oik44qVkVRLhxKUMLC5ikXrMXKurAwJXb7WUVRrEpawjhl0rpMRTFlKtFh
      YUrsluOKyVqgHEoYp5iu7FOeffZZJenoJcVqylN2xYcpYdFblGKlWEmaFKaExW5RLhUXKMeT
      opWwsHVKgSlLiQ4LU7afLVYU6yXlg3FhyrrMAiUvLUEJC4tVjudZFcV0QUkYF6bE7rrQ2N8+
      RXreB4DOEa5dTOfQ8UsYhsxm/Uv+UHKSTMDp5xNsWn0Ka/E5NJpLpF+ER590J3VjLLNPDSYo
      KJa3/X3BdpJS3JnwtD96LQSO/D3/OJuNooQwKsATLTAsIoq1k7fwQ8kwykwwZNwwPI1GPAeP
      xGnPedC60B5IjHmVU0OeISh2Jf6+rmSvzwScOLZzE8ewcrkUznyejnmYF/pG/L5JeBtVKbg/
      wdiICPREMHTHfGISV/LlM2sY4Fy5h3eXbnQ2WsGhIx27WPFwtsdv0tssfeIUaYcOsWHJXFY9
      8gKJcZ3uPL3NCkD5zW2tQ62v2yr/NbrgjhW0nkxel8Cg747z9aHPWRqXTNvw+UwAcH+Ubo92
      xmqCzlM6EoTnf+H7cX/kUlljM90Kl/fwaTzXrpS/zNxEvs6FNkCRY0v6DhjAY81yWbV2CyZt
      ISsjXmJbUSciXothxdR+cCYXC+BEPscyLwM2Mvd9jl+HTsABvj5XCJhJ3/kJOPWlc+3B6s0G
      5B/h+RenUNR5GC/FrCA6UCHnZxPNWraB/GJadu/LgAGPUrBnFRsyixq11wXpeRuVg4MTGG6v
      GAmbM5V9USt49/MnmbZ4AtNiYgh/XwNAvwmLCHD3oM3Up4mOn0JafOVRT0+Nx5XrAKQujSYV
      UBQ/tkQO560XfiQu9mXeBxTFh6kJz2GkHEegxo/f4ADu/kSH+BD/SjjxgKI8wtSVXfH07ETU
      6VnEjgsHQHF7krfmBPxXvzf1oVEU+evhB5uNkhIL9joj+tu7GpuZEks5OmPVlQrzSaJeWMvk
      dUvwxQI369X7gtFYv77SZi7BUm5/x/53qzcW6XkfeFqMxjp+TFo9NcrlVq5pLmFFi7b2/rX3
      vdcr6o11BuNu9cYiPe9vho3C/BKM7q4PVMD+myS8QrXkaoNQLQmvUK2HZXgEQHZ2dmM3QfwH
      PVThBfD19W3sJoj/EBk2CNWS8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS
      8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS8ArVkvAK1ZLwCtWS8ArVatDn
      Nlw8sp64FTurFusYy4KY4bgDF3evZMaHadX7+YyKY2GEH5Rk8+60uRy6pkEx9GT2iun4u1vY
      HDWeksmrecmvcrmn/IyPeWVRMn5j5xM3XJ7LUB8dYlIbuwn37cLikBrbDRfe/CPMiE8lZHYC
      YzqbeX/8dJbv6MbC4V6cTf+KtiFT+eOTbbCZTODSDjCze8FcvugQxeqE33Hi/VdZOOcT1q2q
      XE+h+rQZm3ll0TYJ7kOowYYNNn17ZsxYxBh/D7RGT3y7w+VcE1BIdia07+iCzVSEtkUHvD2N
      UHKW7WdgystBuGqNDBj/Bk75+/ihpPJ8DgYdhRnreWXRNgInLZXgPoQarOfVGj0JCADzuR1M
      jEnEpNEQ/ZoflGRwFCj9y1L+2Q4uXTLxRHQ8r/kDuONy8yHc9g7VT8B3NED6pytJTTuO4jOW
      qCCvhnob4gHS4M8q0zbvQ9zidvx9zUJWLN9N4pyeTJ46k/b+AXjo4ecvVzJ5xSeEJT4BmOo8
      h4MT5HyVReiEcA6tTWTJ7m7EDfOusY88VO+3r8HCayu8SMYPNvwDvPF29cB7Uig7p58gl564
      tGyPR1UP6+rpAaRzveQJAMy2my3VcjPM1nzoN3UJEX09GGC8RHRCLDs6b2C49621Eup6oJ4E
      +rel4S6VFaSzdGksn18sAcwc2bkH3H1wzTtMXOwUdlfVMw4eAvdAOrh3ZJB7Kau2pAOQvSuZ
      fHrTxghlgLNL5UJlngMmM6mnQmLMEs6ZG+zdiAdAw415vUYSO+oUi2a8yIeAYvBj5sKncfWE
      GaNOsbS63pPZK0aiR8vIeVM5PnkJ4Xs1KIobUctm4kE5jgawUt0lEzR9MekRMcSs3M+WmKCG
      ekuikTX8mhTmEgrLwdVorF8dGyWFFnSuv34lmuzsbHk+bxW5zvtL6I243k8dLUbXh+4Z2KIe
      5PawUC0Jr1AtCa9QLQmvUC0Jr1AtCa9QLQmvUC25gCpqaNHFh5QXutBOC2Bhw9ajxKXfQNfG
      i52v+/EIgOk6s/76NR/lVtQ8WNuMJa8GEN7GAahgz96jRB3IB20z3nn9d4xoaQdYSf4ojZkZ
      xXev15OEV9zGmVUvdkH37XcEfHyFXkMCWDXan4MZGfzhdT88Tp+mf2IOgWGBvD21Nydjvub7
      247uOfAxwtvc4MUFx8j1fYzU0b0YeWQfLcYHMsIll+cXfEuhrx+pz/Xnnz9/jmVEXfXPSPhX
      xV1beDsZNohbtA58fzKHN7bncNVmZc+BHCw40a6FKz2xEve3s+TYLHz08Q9YaIafS83DW7rp
      IPc6aUVWvj93HbCnidaBXl5wcMd3lfX0k+zBjl4ehrvUHerdXAmvuMV2nbiN35FmAtAx5+XH
      0JmucLCgAgsOBHrrAHD1aoIOO3xa1gzantTT0NKH04uHcWFmV8j9kY+KwGKDbt7NKnfSNqMd
      0LaN8S5153o3V4YNog7OzJ/6BONaFvPGkgxyTDDzH51ZNXYQQ4ssNHHR1XGMHS//vguY8pm1
      8TQWr06sHNyJ6d4/8ue/5ZA+thcXulmwGHTogCM3Su9St9a7lRJeUZOhJVvfDKCXKZfQP6Vz
      vGrm6cHUNEIymuHnVsGxywZSXu/C2dzbg+aAn5cDB/92jI/OWeHcdwwdPJihvk1Y8FkW/f/3
      Mr08nfjnuWL+MDUQndnG1ey66/UlwwZxGyfemRlAL64T9dfvuermTLc2zrjiTNKbg5jfppSP
      0nMJHNKFJrZ80oqgnbcnI72dgApyb8BTAzvRAtC1bEU34Pt/FTPu5cEcHuHKJ+k53Ojiw1Ct
      lYPnSu9ar6+Gn8/biGQ+7y11zed19e7KiZc71apambVgLyf9epE6olVVrZi4FYfZkFvByBeH
      sVJ7kg4f5ODaxoukV/3oVvX7PPf0aUZ/eJbcNl7se92PdlVHb99+mD8eqbz8Vlf9bmrP55Xw
      PqR+0WR0rQMtDHZcLbJUl3z6/o4Uv8s89kFOda2FixPYzFw13X7Jy44Wbg6UXbNQWOOkd6vf
      qfEnowv1slm5WlSzpLPl8setl2vUrhbV9au/gqvXLPdRvzcJr/hVvk//scaNioYkH9iEakl4
      hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWrJlMiH
      1AX9843dhF+g9jR2IVRKwitUS8IrVEvCK1RLwitUS8IrVEvCK1RLwitUS8IrVEvCK1RLwitU
      S+Y2iBqunLEQmGzhvA1Aw2vDnUjwt+f6eQu9Nlg4D6C3Z+MkI2Oa1jq42MboNaWkFFRuBgYY
      2B/sgN5sY/T7N+saXgs1ktDdDqhg+toSludUPutxwnBn1vjXvz+V8IrbVDA6yYK5u4GfhmtJ
      O1DK6B0mgrs7sWCDhetd9VwL1fLepmLGrjETPE1Ps9uOXp5cSorNgeOzDOjPm3k02cT0rlq6
      Hiwlxazl+CwnrqeXEpRSSnBXZ/QHSlmeY0fqNCf0GSaCdpQQ0tWFUH39WivDBnGLTcG/qwMb
      gx1opdUQOsARPRWcN2uYFmzgQKgjzbR2DGxvB+YKaj7bUaFpKweWPafHXw9du+oIBU4VKPQM
      0LN1ohP+egjsaAco/GRWeDe9Av+BeoKdNQzsrycYhTVn6rcSEEjPK26ntSch3FC1oTB9vQmz
      3oFgZw0dAxzAbKXn2yYybBA42IlWNQ7WMDHYUL21a28pKWjY+IgdfZ0dAYXJ7xfx7hWgnZ6J
      znAAaN1UU318Uy0U3EdzpecVdahg8ntFLL9ix8ZJBjreLGvtWRZu4E+P2JG2t5Rdd1k+YtOO
      YkKOlDMh1MiY6sV9NEwc7MTqAVrIMTP5fNUzzeu/BMUdJLyiJrONfvOKebdIS9oc58oPZbYK
      Nh2xkqW1Y+AjDrz1vJ7WVHAkr/bBCnPX3mBshsKfJ7qwpntlvA5klLGrAPw7apn4lBMT9HDw
      QgVmoMBW46Ux3UeYJbziNhWMeaeUNOzZOlFPq4IKMq5UcJ0KZuw1EXawMllHjpTxExr8m8L5
      81Y2na8cp25KLubPOTAt3ImJzgoZV8o5b1ZI2WsmJMnCFeD6JQtJZujR1p4x3TWk7TWTAZzP
      NJMChLSrfyRlTYqH1f+43lG6ft6M24ayWlUNq6e50DPLROAuK+aq6vPBRjYF2LMp6QZjrQaU
      MRp6Liglo9bRwcOd2draRq/3zZyqqj3aXc/fQx1pZitn9DslpFQtN/zUACcOPPVvPob9T80/
      A5LwPqzqCO+9KVwpAF1TTfUlsqz0UgJPOXA98t7Lrl4prgCtHa30ddT1drS61+WDWuGVqw3i
      PmhoVevGhFmrZdOI+q0X3Mq57iHB3er3IuEVv4q/vyP+jfTa8oFNqJaEV6iWhFeoloRXqJaE
      V6hWg4b34pH1RD77LOHh4UQt3kF+Vb0wezdRVfXIxR9X1ynJ5t2oyvqzkYvJyLcBJWyOepbV
      J29d88vP+Jjw8HDm78huyLcjGlnDhTf/CDPiUxk4O4GkD5fS/Vgiy3ecA9tF3pm7lg5Ri9nw
      4VJ6H/uIOZuzATO7F8zliw5RfJD0IVN6Z7FwzieUAGWm206bsZlXFiXjN3Y+ccPlBsTDpMHC
      a9O3Z8aMRYzx90Br9MS3O1zONVGS/QWZ9OPFIG/0Ri/Gzx5Cfso3FJacZfsZmPJyEK5aIwPG
      v4FT/j5+KKk8n4NBR2HGel5ZtI3ASUsluA+hBrtJoTV6EhAA5nM7mBiTiEmjIfo1P7h6DGhG
      9cw5Q+XdGq09gDsuN28l2jtwc7aoowHSP11JatpxFJ+xRAV5NdTbEA+QBr/Dpm3eh7jF7fj7
      moWsWL6bVeMArHeZ1mmqs+rgBDlfZRE6IZxDaxNZsrsbccO8a+yTnS3j33+ne8f2jd2E+5ZZ
      a7vBwmsrvEjGDzb8A7zxdvXAe1IoO6ef4JqtNWC5FV6btfKf8spN880vaLXcDLM1H/pNXUJE
      Xw8GGC8RnRDLjs4bGO59a8ZHXRNwJNC/LQ33ga0gnaVLY/n8Yglg5sjOPeDuQzufPrTjC7al
      /wwUsnvtZ/BkN1yNHRnkXsqqLekAZO9KJp/etDFCGeDsUjnQ8BwwmUk9FRJjlnDOfNdXF79B
      DTfm9RpJ7KhTLJrxIh8CisGPmQufRq/XM2vm00xZOoW9gOL2JMsm9gVg5LypHJ+8hPC9GhTF
      jahlM/GgHEfD7QMNLUHTF5MeEUPMyv1siQlqqLckGlnDz+c1l1BYDq5GY826rYRCSx11bJQU
      WtC5Gn/1/zSZz3tL9/XdG7sJ9y0zsuaot+GnROqN1DkNWmvEtc7WaDHW/QXxkJPbw0K1JLxC
      tSS8QrUkvEK1JLxCtSS8QrUkvEK1JLxCtSS8QrUkvEK1JLxCtSS8QrUkvEK1JLxCtSS8QrUk
      vEK1JLxCtSS8QrUkvEK1JLyiTroWk8mMPEBo1WOKmrf9A3vGZpIZmUlm5AFmP9L17se2ns4/
      xsbjebPg2J/EiH9UHZtJZuQeQgyA/eO8PeJmPY35nTrdVxvlLxtFHbryXvAk4GrV+sKdiA+a
      guOPb/JU2j56+L9LfOAiDv84ksPltx+no4/vfFb3CYayXdVrE+tc+9DDMY9l+98kG0dc7OHb
      Mh2RgzcS7HSYl5JjuNF2Dsn9k7lU0I//u2ahPqTnFXeIHJJIb9NVAHQA9i5kXdxG7Dcp5JXf
      YN9327DQlraOtQ40hBDfJ4DDV66C/a2yp3tX4DKXyx1pbl/G0YuHySt3oUdLOPxNHN+YbpB1
      ZgH70NGjqUu92ynhFTV4+r7H9FZZjN21kKtUPT6r/AQLv4jjmzKA5kwfMg9d2X6+rP0oOVMq
      gesHEv19OtjfSnYPz8eB3izuP495T67mq7Hv8bg9lJWDb6selTvZP44n0MbNm/qSYYO4xTmU
      LX36s21/P06UDaIJ1OhBoROzR2wnouk5YrbO4vIdJ6j8de9iX7NLzjq7nIVnv2XzxSzgcRIj
      NzLdtwXRh7dx8Ml4Mr2uYnFsgQ44arpR7+ZKeEW15i0H4QKMCvqKUVW1eaPTIDmQlPL+JEa8
      R4+yw4zd+Conyv/dmW6ng/KrfJubVbV9nn+VQ383T/KylzH001R6uHty6adzjB+5EV1Z/cMr
      wwZRLe9iDEO3DmVo8lM89ekyLFj4y67hpJg8eXv0e/TgW6J3LSDPuRNd3TrRBPBsHUJIa8+a
      J6rRW+sY1T+e5GGTaQ40aTGK/vZw+PxRIgZ/xZ4+vqSeSaGo7SQG2Rdx+Kc7+/O7kZ5X3FJ+
      g8vFVT1feR43KCOvOI8mracT7AjQg/iRe6p2LuLN5EAsj85jsXYhqT+lVJ+mrKwMym8OHW6w
      /LOF9H5mNgcjJwGQlR1D3KUbULqQyGdmkxk5HYBd34Szubj+zZWFsx9S/6kH7XXyXcNGr1QC
      P0u5577NDZ5Qfpm8GgvL62ju7EJZcR73GjA0/oP2xG+KrvxLZn2VWq9980x1DQks5BXX77pu
      bRJe8atknVnfaK8tH9iEakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4
      hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWpJeIVqSXiFakl4hWrJcxse
      UsmLbI3dhPsXWXNTel6hWhJeoVoSXqFaEl6hWhJeoVr/Dz/Xy1j33f8UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='102' name='Can See MD (6)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income vs Care' width='192'>
      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
      5xIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
