<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' default-format='p0.00%' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='YES' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='No' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='StateName' inline='true' name='textscan.41917.768215752300' version='8.3'>
      <connection class='textscan' directory='/Users/alyshialedlie/Documents' filename='StateName.csv'>
        <relation name='StateName#csv' table='[StateName#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='State' ordinal='0' />
            <column datatype='string' name='StateName' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateName]</local-name>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias>StateName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[StateName#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Outpatient' inline='true' name='Medicare' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ZI322' server='128.83.138.158' service='orcl' username='c##cs347_zi322'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[MC_PROVIDERS].[ID]'>
              </expression>
              <expression op='[MC_OUTPATIENT].[PROVIDERID]'>
              </expression>
            </expression>
          </clause>
          <relation name='MC_PROVIDERS' table='[C##CS347_ZI322].[MC_PROVIDERS]' type='table' />
          <relation name='MC_OUTPATIENT' table='[C##CS347_ZI322].[MC_OUTPATIENT]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STREETADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STREETADDRESS]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>STREETADDRESS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIPCODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIPCODE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ZIPCODE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITALREFERRALREGION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[HOSPITALREFERRALREGION]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>HOSPITALREFERRALREGION</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='2' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=2000,charform=2}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PHONENUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PHONENUMBER]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>PHONENUMBER</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[MC_PROVIDERS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROCEDURE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROCEDURE]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>PROCEDURE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>120</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDERID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDERID]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>PROVIDERID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTPATIENTSERVICES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTPATIENTSERVICES]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>OUTPATIENTSERVICES</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGESUBMITTEDCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGESUBMITTEDCHARGES]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>AVERAGESUBMITTEDCHARGES</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGETOTALPAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGETOTALPAYMENTS]</local-name>
            <parent-name>[MC_OUTPATIENT]</parent-name>
            <remote-alias>AVERAGETOTALPAYMENTS</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Averagesubmittedcharges' datatype='real' name='[AVERAGESUBMITTEDCHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Averagetotalpayments' datatype='real' name='[AVERAGETOTALPAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Hospitalreferralregion' datatype='string' name='[HOSPITALREFERRALREGION]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[ID]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outpatientservices' datatype='real' name='[OUTPATIENTSERVICES]' role='measure' type='quantitative'>
      </column>
      <column caption='Phonenumber' datatype='string' name='[PHONENUMBER]' role='dimension' type='nominal'>
      </column>
      <column caption='Procedure' datatype='string' name='[PROCEDURE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Providerid' datatype='real' name='[PROVIDERID]' role='dimension' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column caption='Streetaddress' datatype='string' name='[STREETADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Zipcode' datatype='real' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='100000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Income' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ET5748' server='128.83.138.158' service='orcl' username='C##cs347_et5748'>
        <relation name='MC_INCOME' table='[C##CS347_ET5748].[MC_INCOME]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDIAN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEDIAN]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>MEDIAN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEAN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEAN]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>MEAN</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[POP]</local-name>
            <parent-name>[MC_INCOME]</parent-name>
            <remote-alias>POP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mean' datatype='real' name='[MEAN]' role='measure' type='quantitative'>
      </column>
      <column caption='Median' datatype='real' name='[MEDIAN]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='100000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Pop By State' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_HNP248' server='128.83.138.158' service='orcl' username='C##cs347_hnp248'>
        <relation name='Custom SQL Query' type='text'>SELECT Sum(Popestimate2012), State.State_Name FROM Population&#10;INNER JOIN State&#10;on Population.State_ID = State.State_ID&#10;GROUP BY State.State_Name</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SUM(POPESTIMATE2012)</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SUM(POPESTIMATE2012)]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SUM(POPESTIMATE2012)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>STATE_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='#Drs/Pop' datatype='real' name='[Calculation_3391003142633875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.41915.546833981500].[Number of Records])/Sum([SUM(POPESTIMATE2012)])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='1000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='State, MedCost' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_AML569' server='128.83.138.158' service='pdborcl' username='cs378_aml569'>
        <relation name='Custom SQL Query' type='text'>SELECT State, CTYCODE1, AGE, INCOME2, HLTHPLN1, CHECKUP1, MEDCOST FROM Patients</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTYCODE1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CTYCODE1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CTYCODE1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INCOME2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[INCOME2]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>INCOME2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HLTHPLN1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HLTHPLN1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HLTHPLN1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHECKUP1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CHECKUP1]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CHECKUP1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDCOST</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MEDCOST]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>MEDCOST</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
      </column>
      <column caption='MedCost' datatype='integer' name='[Calculation_1001005204916146]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[MEDCOST]' scope-isolation='false' />
      </column>
      <column caption='NumberYes' datatype='real' name='[Calculation_1131005194600905]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN [Parameters].[Parameter 2] END' scope-isolation='false' />
      </column>
      <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
      </column>
      <column caption='PercentNo' datatype='real' name='[Calculation_5591005215009390]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_8641005214823886])/SUM([Number of Records])' scope-isolation='false' />
      </column>
      <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
      </column>
      <column caption='NumberNo' datatype='real' name='[Calculation_8641005214823886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [MEDCOST] = 2 THEN [Parameters].[Parameter 3] END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Insurance' />
          <alias key='2' value='No Insurance' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Less Than $10,000' />
          <alias key='2.0' value='$10,000 - $15,000' />
          <alias key='3.0' value='$15,000-$20,000' />
          <alias key='4.0' value='$20,000 - 25,000' />
          <alias key='5.0' value='$25,00 - $35,000' />
          <alias key='6.0' value='$35,000 - $50,000 ' />
          <alias key='7.0' value='$50,000 - $75,000' />
          <alias key='8.0' value='75,000+' />
          <alias key='77.0' value='Don&apos;t Know/Not Sure' />
          <alias key='99.0' value='Refused' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[MEDCOST]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
      <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[MEDCOST]' member='%null%' />
          <groupfilter from='1' function='range' level='[MEDCOST]' to='9' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' rowDisplayCount='500000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:INCOME2:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>7.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>8.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>99.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>3.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>6.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>1.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>4.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>77.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:HLTHPLN1:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>1</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>9</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>7</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>%many-values%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6831005181145998:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='YES' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='No' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='State, MedCost'>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.41917.768215752300'>
      <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[State]' derivation='None' name='[none:State:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='State, MedCost' target='textscan.41917.768215752300'>
      <column-mapping>
        <map key='[State, MedCost].[none:STATE:ok]' value='[textscan.41917.768215752300].[none:State:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='By Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_0461005211310581]' derivation='None' name='[none:Calculation_0461005211310581:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_0461005211310581:nk]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='By Insured'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[State, MedCost].[none:HLTHPLN1:ok]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:HLTHPLN1:ok]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ByAge'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Ages' datatype='string' name='[Calculation_0461005211310581]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AGE] &lt; 26 THEN &quot;25 and Younger&quot;&#10;ELSEIF [AGE] &lt; 35 THEN &quot;25 - 35&quot;&#10;ELSEIF [AGE] &lt; 45 THEN &quot;35 - 45&quot;&#10;ELSEIF [AGE] &lt; 65 THEN &quot;45 - 65&quot;&#10;ELSE &quot;65+ (Medicare)&quot;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_0461005211310581]' derivation='None' name='[none:Calculation_0461005211310581:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[State, MedCost].[none:Calculation_0461005211310581:nk]' direction='DESC' using='[State, MedCost].[sum:Number of Records:qk]'>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;No&quot;' />
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Yes&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_6831005181145998:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[sum:Number of Records:qk]</rows>
        <cols>[State, MedCost].[none:Calculation_0461005211310581:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Can See MD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
            <datasource caption='StateName' name='textscan.41917.768215752300' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.41917.768215752300].[none:StateName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:StateName:nk]' />
              <groupfilter function='member' level='[none:StateName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[State, MedCost].[none:Calculation_6831005181145998:nk]</column>
            <column>[textscan.41917.768215752300].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
        <join-lod-include-overrides>
          <column>[textscan.41917.768215752300].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Can See MD (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
              <tooltip column='[State, MedCost].[pcto:sum:Number of Records:qk:3]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[none:Calculation_6831005181145998:nk]</rows>
        <cols>[State, MedCost].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Can See MD (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
            <datasource caption='StateName' name='textscan.41917.768215752300' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[State]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[none:Calculation_6831005181145998:nk]</cols>
        <join-lod-include-overrides>
          <column>[textscan.41917.768215752300].[State]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Can See MD (6)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less Than $10,000' />
                <alias key='2.0' value='$10,000 - $15,000' />
                <alias key='3.0' value='$15,000-$20,000' />
                <alias key='4.0' value='$20,000 - 25,000' />
                <alias key='5.0' value='$25,00 - $35,000' />
                <alias key='6.0' value='$35,000 - $50,000 ' />
                <alias key='7.0' value='$50,000 - $75,000' />
                <alias key='8.0' value='75,000+' />
                <alias key='77.0' value='Don&apos;t Know/Not Sure' />
                <alias key='99.0' value='Refused' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[State, MedCost].[none:INCOME2:ok]'>
            <groupfilter from='1.0' function='range' level='[none:INCOME2:ok]' to='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[State, MedCost].[none:INCOME2:ok]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:INCOME2:ok]' />
              <size column='[State, MedCost].[none:HLTHPLN1:ok]' />
              <text column='[State, MedCost].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[State, MedCost].[sum:Number of Records:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4282872676849365' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[State, MedCost].[none:Calculation_6831005181145998:nk]</rows>
        <cols>[State, MedCost].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Geographic Care'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='State, MedCost' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_1781005191151364]' derivation='User' name='[usr:Calculation_1781005191151364:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Latitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Longitude (generated)]' included-values='non-null'>
          </filter>
          <slices>
            <column>[textscan.41917.768215752300].[Latitude (generated)]</column>
            <column>[textscan.41917.768215752300].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41917.768215752300].[Longitude (generated)]' field-type='quantitative' max='32908877.759356227' min='25551355.164738301' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41917.768215752300].[Latitude (generated)]' field-type='quantitative' max='6354725.3827872258' min='2636828.3269962524' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[State, MedCost].[usr:Calculation_1781005191151364:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='break-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='show-null-value-warning' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[usr:Calculation_1781005191151364:qk]' />
              <text column='[State, MedCost].[usr:Calculation_1781005191151364:qk]' />
              <lod column='[textscan.41917.768215752300].[none:StateName:nk]' />
              <geometry column='[textscan.41917.768215752300].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[Latitude (generated)]</rows>
        <cols>[textscan.41917.768215752300].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[State, MedCost].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Income vs Care'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='State, MedCost' />
          </datasources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='Response' datatype='string' name='[Calculation_6831005181145998]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MEDCOST] = 1 THEN &quot;Yes&quot;&#10;ELSEIF [MEDCOST] = 2 THEN &quot;No&quot;&#10;ELSEIF [MEDCOST] = 7 THEN &quot;Don&apos;t Know&quot;&#10;ELSE &quot;Refused&quot;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='real' name='[INCOME2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Less Than $10,000' />
                <alias key='2.0' value='$10,000 - $15,000' />
                <alias key='3.0' value='$15,000-$20,000' />
                <alias key='4.0' value='$20,000 - 25,000' />
                <alias key='5.0' value='$25,00 - $35,000' />
                <alias key='6.0' value='$35,000 - $50,000 ' />
                <alias key='7.0' value='$50,000 - $75,000' />
                <alias key='8.0' value='75,000+' />
                <alias key='77.0' value='Don&apos;t Know/Not Sure' />
                <alias key='99.0' value='Refused' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_6831005181145998]' derivation='None' name='[none:Calculation_6831005181145998:nk]' pivot='key' type='nominal' />
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INCOME2]' derivation='None' name='[none:INCOME2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[State, MedCost].[none:Calculation_6831005181145998:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_6831005181145998:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Don&apos;t Know&quot;' />
                <groupfilter function='member' level='[none:Calculation_6831005181145998:nk]' member='&quot;Refused&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[State, MedCost].[none:Calculation_6831005181145998:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Don&apos;t Know&quot;</bucket>
              <bucket>&quot;Refused&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[State, MedCost].[none:INCOME2:ok]'>
            <groupfilter from='1.0' function='range' level='[none:INCOME2:ok]' to='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[State, MedCost].[none:INCOME2:ok]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[State, MedCost].[none:Calculation_6831005181145998:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[State, MedCost].[none:Calculation_6831005181145998:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[State, MedCost].[pcto:sum:Number of Records:qk:1]</rows>
        <cols>[State, MedCost].[none:INCOME2:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Helvetica'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateName' name='textscan.41917.768215752300' />
            <datasource name='State, MedCost' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='State, MedCost'>
            <column caption='PercentYes' datatype='real' default-format='p0.00%' name='[Calculation_1781005191151364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131005194600905])/COUNT([MEDCOST])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[HLTHPLN1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Insurance' />
                <alias key='2' value='No Insurance' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[STATE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[HLTHPLN1]' derivation='None' name='[none:HLTHPLN1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1781005191151364]' derivation='User' name='[usr:Calculation_1781005191151364:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41917.768215752300'>
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[State, MedCost].[none:HLTHPLN1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='1' />
              <groupfilter function='member' level='[none:HLTHPLN1:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Latitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[textscan.41917.768215752300].[Longitude (generated)]' included-values='non-null'>
          </filter>
          <sort class='manual' column='[textscan.41917.768215752300].[none:StateName:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Virgin Islands&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.41917.768215752300].[Latitude (generated)]</column>
            <column>[textscan.41917.768215752300].[Longitude (generated)]</column>
            <column>[State, MedCost].[none:HLTHPLN1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[State, MedCost].[usr:Calculation_1781005191151364:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='break-on-special' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
            <format attr='show-null-value-warning' field='[textscan.41917.768215752300].[none:StateName:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.41917.768215752300].[none:StateName:nk]</rows>
        <cols>[State, MedCost].[usr:Calculation_1781005191151364:qk]</cols>
        <join-lod-include-overrides>
          <column>[State, MedCost].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Helvetica' fontsize='20'>Was there a time in the past 12 months when you needed to see a doctor but could not because of cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='8250' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='91750' id='5' param='horz' type='layout-flow' w='100000' x='0' y='8250'>
              <zone h='91750' id='3' type='layout-basic' w='84000' x='0' y='8250'>
                <zone h='45875' id='1' name='Income vs Care' w='84000' x='0' y='8250'>
                </zone>
                <zone h='45875' id='7' name='Geographic Care' w='84000' x='0' y='54125'>
                </zone>
              </zone>
              <zone fixed-size='160' h='91750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='8250'>
                <zone h='6000' id='6' name='Income vs Care' pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' w='16000' x='84000' y='8250'>
                </zone>
                <zone h='43437' id='17' name='ByAge' w='16000' x='84000' y='14250'>
                  <layout-cache minheight='206' type-h='scalable' type-w='fixed' />
                </zone>
                <zone h='6000' id='14' name='By Insured' pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' w='16000' x='84000' y='57687'>
                </zone>
                <zone h='35812' id='13' name='By Insured' w='16000' x='84000' y='63687'>
                  <layout-cache minheight='145' type-h='scalable' type-w='fixed' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='6250' id='8' name='Geographic Care' pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' w='14000' x='1800' y='54500'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[sum:Calculation_0641005190018159:qk]</field>
          <field>[textscan.41917.768215752300].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Geographic Care'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='57'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:MEDCOST:ok]</field>
          <field>[State, MedCost].[tyr:IDATE:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
          <field>[textscan.41917.768215752300].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='ByAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_0461005211310581:nk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='By Insured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='57'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[avg:HLTHPLN1:qk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:MEDCOST:ok]</field>
          <field>[State, MedCost].[tyr:IDATE:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='By Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_0461005211310581:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_0461005211310581:nk]</field>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Can See MD (6)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:INCOME2:ok]' type='color' />
            <card pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[State, MedCost].[none:INCOME2:ok]</field>
          <field>[State, MedCost].[sum:INCOME2:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Income vs Care'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
          <field>[State, MedCost].[none:HLTHPLN1:ok]</field>
          <field>[State, MedCost].[none:INCOME2:ok]</field>
          <field>[State, MedCost].[sum:INCOME2:ok]</field>
          <field>[textscan.41917.768215752300 (copy)].[none:StateName:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <zones>
        <zone h='8250' id='9' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Income vs Care'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[State, MedCost].[none:Calculation_6831005181145998:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Geographic Care'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Income vs Care' pane-specification-id='0' param='[State, MedCost].[none:Calculation_6831005181145998:nk]' type='color' />
        <zone name='ByAge'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='By Insured' pane-specification-id='0' param='[State, MedCost].[none:HLTHPLN1:ok]' type='color' />
        <zone name='Geographic Care' pane-specification-id='0' param='[State, MedCost].[usr:Calculation_1781005191151364:qk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Can See MD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographic Care' width='192'>
      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
    </thumbnail>
    <thumbnail height='142' name='Can See MD (2)' width='192'>
      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
      /wFiSS96gsrvAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Can See MD (3)' width='192'>
      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
      0T0olf8NlrZt+UDzGVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ByAge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='By Insured' width='192'>
      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
      +wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='By Age' width='175'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='102' name='Can See MD (6)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income vs Care' width='192'>
      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
      IiWRIqf9f35WYcLfEMTYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
